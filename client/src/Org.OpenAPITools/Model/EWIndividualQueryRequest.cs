/*
 * Faktoring API - Test
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// EWIndividualQueryRequest
    /// </summary>
    [DataContract(Name = "EWIndividualQueryRequest")]
    public partial class EWIndividualQueryRequest : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EWIndividualQueryRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected EWIndividualQueryRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="EWIndividualQueryRequest" /> class.
        /// </summary>
        /// <param name="creditAccount">creditAccount (required).</param>
        /// <param name="queryDateStart">queryDateStart (required).</param>
        /// <param name="queryDateEnd">queryDateEnd (required).</param>
        /// <param name="tcknVkn">tcknVkn.</param>
        /// <param name="warningCodes">warningCodes.</param>
        /// <param name="opinionSts">opinionSts.</param>
        /// <param name="branchCode">branchCode.</param>
        /// <param name="branchResponseDateStart">branchResponseDateStart (required).</param>
        /// <param name="branchResponseDateEnd">branchResponseDateEnd (required).</param>
        /// <param name="hqRequestDateStart">hqRequestDateStart (required).</param>
        /// <param name="hqRequestDateEnd">hqRequestDateEnd (required).</param>
        public EWIndividualQueryRequest(string creditAccount = default(string), DateTime queryDateStart = default(DateTime), DateTime queryDateEnd = default(DateTime), string tcknVkn = default(string), string warningCodes = default(string), string opinionSts = default(string), int branchCode = default(int), DateTime branchResponseDateStart = default(DateTime), DateTime branchResponseDateEnd = default(DateTime), DateTime hqRequestDateStart = default(DateTime), DateTime hqRequestDateEnd = default(DateTime))
        {
            // to ensure "creditAccount" is required (not null)
            if (creditAccount == null)
            {
                throw new ArgumentNullException("creditAccount is a required property for EWIndividualQueryRequest and cannot be null");
            }
            this.CreditAccount = creditAccount;
            this.QueryDateStart = queryDateStart;
            this.QueryDateEnd = queryDateEnd;
            this.BranchResponseDateStart = branchResponseDateStart;
            this.BranchResponseDateEnd = branchResponseDateEnd;
            this.HqRequestDateStart = hqRequestDateStart;
            this.HqRequestDateEnd = hqRequestDateEnd;
            this.TcknVkn = tcknVkn;
            this.WarningCodes = warningCodes;
            this.OpinionSts = opinionSts;
            this.BranchCode = branchCode;
        }

        /// <summary>
        /// Gets or Sets CreditAccount
        /// </summary>
        [DataMember(Name = "CreditAccount", IsRequired = true, EmitDefaultValue = true)]
        public string CreditAccount { get; set; }

        /// <summary>
        /// Gets or Sets QueryDateStart
        /// </summary>
        [DataMember(Name = "QueryDateStart", IsRequired = true, EmitDefaultValue = true)]
        public DateTime QueryDateStart { get; set; }

        /// <summary>
        /// Gets or Sets QueryDateEnd
        /// </summary>
        [DataMember(Name = "QueryDateEnd", IsRequired = true, EmitDefaultValue = true)]
        public DateTime QueryDateEnd { get; set; }

        /// <summary>
        /// Gets or Sets TcknVkn
        /// </summary>
        [DataMember(Name = "TcknVkn", EmitDefaultValue = true)]
        public string TcknVkn { get; set; }

        /// <summary>
        /// Gets or Sets WarningCodes
        /// </summary>
        [DataMember(Name = "WarningCodes", EmitDefaultValue = true)]
        public string WarningCodes { get; set; }

        /// <summary>
        /// Gets or Sets OpinionSts
        /// </summary>
        [DataMember(Name = "OpinionSts", EmitDefaultValue = true)]
        public string OpinionSts { get; set; }

        /// <summary>
        /// Gets or Sets BranchCode
        /// </summary>
        [DataMember(Name = "BranchCode", EmitDefaultValue = false)]
        public int BranchCode { get; set; }

        /// <summary>
        /// Gets or Sets BranchResponseDateStart
        /// </summary>
        [DataMember(Name = "BranchResponseDateStart", IsRequired = true, EmitDefaultValue = true)]
        public DateTime BranchResponseDateStart { get; set; }

        /// <summary>
        /// Gets or Sets BranchResponseDateEnd
        /// </summary>
        [DataMember(Name = "BranchResponseDateEnd", IsRequired = true, EmitDefaultValue = true)]
        public DateTime BranchResponseDateEnd { get; set; }

        /// <summary>
        /// Gets or Sets HqRequestDateStart
        /// </summary>
        [DataMember(Name = "HqRequestDateStart", IsRequired = true, EmitDefaultValue = true)]
        public DateTime HqRequestDateStart { get; set; }

        /// <summary>
        /// Gets or Sets HqRequestDateEnd
        /// </summary>
        [DataMember(Name = "HqRequestDateEnd", IsRequired = true, EmitDefaultValue = true)]
        public DateTime HqRequestDateEnd { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class EWIndividualQueryRequest {\n");
            sb.Append("  CreditAccount: ").Append(CreditAccount).Append("\n");
            sb.Append("  QueryDateStart: ").Append(QueryDateStart).Append("\n");
            sb.Append("  QueryDateEnd: ").Append(QueryDateEnd).Append("\n");
            sb.Append("  TcknVkn: ").Append(TcknVkn).Append("\n");
            sb.Append("  WarningCodes: ").Append(WarningCodes).Append("\n");
            sb.Append("  OpinionSts: ").Append(OpinionSts).Append("\n");
            sb.Append("  BranchCode: ").Append(BranchCode).Append("\n");
            sb.Append("  BranchResponseDateStart: ").Append(BranchResponseDateStart).Append("\n");
            sb.Append("  BranchResponseDateEnd: ").Append(BranchResponseDateEnd).Append("\n");
            sb.Append("  HqRequestDateStart: ").Append(HqRequestDateStart).Append("\n");
            sb.Append("  HqRequestDateEnd: ").Append(HqRequestDateEnd).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // CreditAccount (string) minLength
            if (this.CreditAccount != null && this.CreditAccount.Length < 1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for CreditAccount, length must be greater than 1.", new [] { "CreditAccount" });
            }

            yield break;
        }
    }

}
