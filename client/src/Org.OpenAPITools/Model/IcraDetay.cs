/*
 * Faktoring API - Test
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// IcraDetay
    /// </summary>
    [DataContract(Name = "IcraDetay")]
    public partial class IcraDetay : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="IcraDetay" /> class.
        /// </summary>
        /// <param name="ad">ad.</param>
        /// <param name="tarih">tarih.</param>
        /// <param name="alacakli">alacakli.</param>
        /// <param name="icra">icra.</param>
        /// <param name="dosyano">dosyano.</param>
        /// <param name="doviz">doviz.</param>
        /// <param name="tutar">tutar.</param>
        /// <param name="turu">turu.</param>
        public IcraDetay(string ad = default(string), string tarih = default(string), string alacakli = default(string), string icra = default(string), string dosyano = default(string), string doviz = default(string), string tutar = default(string), string turu = default(string))
        {
            this.Ad = ad;
            this.Tarih = tarih;
            this.Alacakli = alacakli;
            this.Icra = icra;
            this.Dosyano = dosyano;
            this.Doviz = doviz;
            this.Tutar = tutar;
            this.Turu = turu;
        }

        /// <summary>
        /// Gets or Sets Ad
        /// </summary>
        [DataMember(Name = "ad", EmitDefaultValue = true)]
        public string Ad { get; set; }

        /// <summary>
        /// Gets or Sets Tarih
        /// </summary>
        [DataMember(Name = "tarih", EmitDefaultValue = true)]
        public string Tarih { get; set; }

        /// <summary>
        /// Gets or Sets Alacakli
        /// </summary>
        [DataMember(Name = "alacakli", EmitDefaultValue = true)]
        public string Alacakli { get; set; }

        /// <summary>
        /// Gets or Sets Icra
        /// </summary>
        [DataMember(Name = "icra", EmitDefaultValue = true)]
        public string Icra { get; set; }

        /// <summary>
        /// Gets or Sets Dosyano
        /// </summary>
        [DataMember(Name = "dosyano", EmitDefaultValue = true)]
        public string Dosyano { get; set; }

        /// <summary>
        /// Gets or Sets Doviz
        /// </summary>
        [DataMember(Name = "doviz", EmitDefaultValue = true)]
        public string Doviz { get; set; }

        /// <summary>
        /// Gets or Sets Tutar
        /// </summary>
        [DataMember(Name = "tutar", EmitDefaultValue = true)]
        public string Tutar { get; set; }

        /// <summary>
        /// Gets or Sets Turu
        /// </summary>
        [DataMember(Name = "turu", EmitDefaultValue = true)]
        public string Turu { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class IcraDetay {\n");
            sb.Append("  Ad: ").Append(Ad).Append("\n");
            sb.Append("  Tarih: ").Append(Tarih).Append("\n");
            sb.Append("  Alacakli: ").Append(Alacakli).Append("\n");
            sb.Append("  Icra: ").Append(Icra).Append("\n");
            sb.Append("  Dosyano: ").Append(Dosyano).Append("\n");
            sb.Append("  Doviz: ").Append(Doviz).Append("\n");
            sb.Append("  Tutar: ").Append(Tutar).Append("\n");
            sb.Append("  Turu: ").Append(Turu).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
