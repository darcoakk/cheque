/*
 * Faktoring API - Test
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// ToplamData
    /// </summary>
    [DataContract(Name = "ToplamData")]
    public partial class ToplamData : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ToplamData" /> class.
        /// </summary>
        /// <param name="toplamDvzKodu">toplamDvzKodu.</param>
        /// <param name="toplamLimit">toplamLimit.</param>
        /// <param name="toplamNakitRisk">toplamNakitRisk.</param>
        /// <param name="toplamGayriNakitRisk">toplamGayriNakitRisk.</param>
        /// <param name="toplamTurevRisk">toplamTurevRisk.</param>
        /// <param name="toplamRisk">toplamRisk.</param>
        public ToplamData(string toplamDvzKodu = default(string), double toplamLimit = default(double), double toplamNakitRisk = default(double), double toplamGayriNakitRisk = default(double), double toplamTurevRisk = default(double), double toplamRisk = default(double))
        {
            this.ToplamDvzKodu = toplamDvzKodu;
            this.ToplamLimit = toplamLimit;
            this.ToplamNakitRisk = toplamNakitRisk;
            this.ToplamGayriNakitRisk = toplamGayriNakitRisk;
            this.ToplamTurevRisk = toplamTurevRisk;
            this.ToplamRisk = toplamRisk;
        }

        /// <summary>
        /// Gets or Sets ToplamDvzKodu
        /// </summary>
        [DataMember(Name = "ToplamDvzKodu", EmitDefaultValue = true)]
        public string ToplamDvzKodu { get; set; }

        /// <summary>
        /// Gets or Sets ToplamLimit
        /// </summary>
        [DataMember(Name = "ToplamLimit", EmitDefaultValue = false)]
        public double ToplamLimit { get; set; }

        /// <summary>
        /// Gets or Sets ToplamNakitRisk
        /// </summary>
        [DataMember(Name = "ToplamNakitRisk", EmitDefaultValue = false)]
        public double ToplamNakitRisk { get; set; }

        /// <summary>
        /// Gets or Sets ToplamGayriNakitRisk
        /// </summary>
        [DataMember(Name = "ToplamGayriNakitRisk", EmitDefaultValue = false)]
        public double ToplamGayriNakitRisk { get; set; }

        /// <summary>
        /// Gets or Sets ToplamTurevRisk
        /// </summary>
        [DataMember(Name = "ToplamTurevRisk", EmitDefaultValue = false)]
        public double ToplamTurevRisk { get; set; }

        /// <summary>
        /// Gets or Sets ToplamRisk
        /// </summary>
        [DataMember(Name = "ToplamRisk", EmitDefaultValue = false)]
        public double ToplamRisk { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ToplamData {\n");
            sb.Append("  ToplamDvzKodu: ").Append(ToplamDvzKodu).Append("\n");
            sb.Append("  ToplamLimit: ").Append(ToplamLimit).Append("\n");
            sb.Append("  ToplamNakitRisk: ").Append(ToplamNakitRisk).Append("\n");
            sb.Append("  ToplamGayriNakitRisk: ").Append(ToplamGayriNakitRisk).Append("\n");
            sb.Append("  ToplamTurevRisk: ").Append(ToplamTurevRisk).Append("\n");
            sb.Append("  ToplamRisk: ").Append(ToplamRisk).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
