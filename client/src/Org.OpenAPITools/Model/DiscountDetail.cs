/*
 * Faktoring API - Test
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// DiscountDetail
    /// </summary>
    [DataContract(Name = "DiscountDetail")]
    public partial class DiscountDetail : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DiscountDetail" /> class.
        /// </summary>
        /// <param name="discountReferenceBranchCode">discountReferenceBranchCode.</param>
        /// <param name="discountReference">discountReference.</param>
        /// <param name="discountSubType">discountSubType.</param>
        /// <param name="id">id.</param>
        /// <param name="discountId">discountId.</param>
        /// <param name="beginningDate">beginningDate.</param>
        /// <param name="maturityDate">maturityDate.</param>
        /// <param name="discountMaturityDate">discountMaturityDate.</param>
        /// <param name="dayCount">dayCount.</param>
        /// <param name="amount">amount.</param>
        /// <param name="interestAmount">interestAmount.</param>
        /// <param name="bsmv">bsmv.</param>
        /// <param name="kkdf">kkdf.</param>
        /// <param name="cashPaymentAmount">cashPaymentAmount.</param>
        /// <param name="costInterestRate">costInterestRate.</param>
        /// <param name="appInterestRate">appInterestRate.</param>
        /// <param name="discountInterestRate">discountInterestRate.</param>
        /// <param name="moduleReference">moduleReference.</param>
        /// <param name="documentNumber">documentNumber.</param>
        /// <param name="draftNumber">draftNumber.</param>
        /// <param name="bankCode">bankCode.</param>
        /// <param name="branchCode">branchCode.</param>
        /// <param name="chequeNumber">chequeNumber.</param>
        /// <param name="accountNumber">accountNumber.</param>
        /// <param name="currencyCode">currencyCode.</param>
        /// <param name="chequeStatusCode">chequeStatusCode.</param>
        /// <param name="name">name.</param>
        /// <param name="fiProvisionNumber">fiProvisionNumber.</param>
        /// <param name="exchangeRateReservationNumber">exchangeRateReservationNumber.</param>
        /// <param name="discountInfo">discountInfo.</param>
        /// <param name="oldDiscountInfo">oldDiscountInfo.</param>
        /// <param name="lastUpdatingChannelCode">lastUpdatingChannelCode.</param>
        /// <param name="lastUpdatingTranCode">lastUpdatingTranCode.</param>
        /// <param name="lastUpdatingUserCode">lastUpdatingUserCode.</param>
        /// <param name="lastUpdateDate">lastUpdateDate.</param>
        /// <param name="recordStatus">recordStatus.</param>
        /// <param name="rowStatus">rowStatus.</param>
        /// <param name="debtorType">debtorType.</param>
        /// <param name="debtorTitle">debtorTitle.</param>
        /// <param name="debtorName">debtorName.</param>
        /// <param name="debtorSurname">debtorSurname.</param>
        /// <param name="debtorAddress">debtorAddress.</param>
        /// <param name="micr">micr.</param>
        public DiscountDetail(int discountReferenceBranchCode = default(int), int discountReference = default(int), string discountSubType = default(string), int id = default(int), int discountId = default(int), DateTime beginningDate = default(DateTime), DateTime maturityDate = default(DateTime), DateTime discountMaturityDate = default(DateTime), int dayCount = default(int), double amount = default(double), double interestAmount = default(double), double bsmv = default(double), double kkdf = default(double), double cashPaymentAmount = default(double), double costInterestRate = default(double), double appInterestRate = default(double), double discountInterestRate = default(double), string moduleReference = default(string), int documentNumber = default(int), int draftNumber = default(int), int bankCode = default(int), int branchCode = default(int), int chequeNumber = default(int), string accountNumber = default(string), string currencyCode = default(string), string chequeStatusCode = default(string), string name = default(string), int fiProvisionNumber = default(int), int exchangeRateReservationNumber = default(int), string discountInfo = default(string), string oldDiscountInfo = default(string), string lastUpdatingChannelCode = default(string), string lastUpdatingTranCode = default(string), string lastUpdatingUserCode = default(string), DateTime lastUpdateDate = default(DateTime), string recordStatus = default(string), string rowStatus = default(string), int debtorType = default(int), string debtorTitle = default(string), string debtorName = default(string), string debtorSurname = default(string), string debtorAddress = default(string), string micr = default(string))
        {
            this.DiscountReferenceBranchCode = discountReferenceBranchCode;
            this.DiscountReference = discountReference;
            this.DiscountSubType = discountSubType;
            this.Id = id;
            this.DiscountId = discountId;
            this.BeginningDate = beginningDate;
            this.MaturityDate = maturityDate;
            this.DiscountMaturityDate = discountMaturityDate;
            this.DayCount = dayCount;
            this.Amount = amount;
            this.InterestAmount = interestAmount;
            this.Bsmv = bsmv;
            this.Kkdf = kkdf;
            this.CashPaymentAmount = cashPaymentAmount;
            this.CostInterestRate = costInterestRate;
            this.AppInterestRate = appInterestRate;
            this.DiscountInterestRate = discountInterestRate;
            this.ModuleReference = moduleReference;
            this.DocumentNumber = documentNumber;
            this.DraftNumber = draftNumber;
            this.BankCode = bankCode;
            this.BranchCode = branchCode;
            this.ChequeNumber = chequeNumber;
            this.AccountNumber = accountNumber;
            this.CurrencyCode = currencyCode;
            this.ChequeStatusCode = chequeStatusCode;
            this.Name = name;
            this.FiProvisionNumber = fiProvisionNumber;
            this.ExchangeRateReservationNumber = exchangeRateReservationNumber;
            this.DiscountInfo = discountInfo;
            this.OldDiscountInfo = oldDiscountInfo;
            this.LastUpdatingChannelCode = lastUpdatingChannelCode;
            this.LastUpdatingTranCode = lastUpdatingTranCode;
            this.LastUpdatingUserCode = lastUpdatingUserCode;
            this.LastUpdateDate = lastUpdateDate;
            this.RecordStatus = recordStatus;
            this.RowStatus = rowStatus;
            this.DebtorType = debtorType;
            this.DebtorTitle = debtorTitle;
            this.DebtorName = debtorName;
            this.DebtorSurname = debtorSurname;
            this.DebtorAddress = debtorAddress;
            this.Micr = micr;
        }

        /// <summary>
        /// Gets or Sets DiscountReferenceBranchCode
        /// </summary>
        [DataMember(Name = "DiscountReferenceBranchCode", EmitDefaultValue = false)]
        public int DiscountReferenceBranchCode { get; set; }

        /// <summary>
        /// Gets or Sets DiscountReference
        /// </summary>
        [DataMember(Name = "DiscountReference", EmitDefaultValue = false)]
        public int DiscountReference { get; set; }

        /// <summary>
        /// Gets or Sets DiscountSubType
        /// </summary>
        [DataMember(Name = "DiscountSubType", EmitDefaultValue = true)]
        public string DiscountSubType { get; set; }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "Id", EmitDefaultValue = false)]
        public int Id { get; set; }

        /// <summary>
        /// Gets or Sets DiscountId
        /// </summary>
        [DataMember(Name = "DiscountId", EmitDefaultValue = false)]
        public int DiscountId { get; set; }

        /// <summary>
        /// Gets or Sets BeginningDate
        /// </summary>
        [DataMember(Name = "BeginningDate", EmitDefaultValue = false)]
        public DateTime BeginningDate { get; set; }

        /// <summary>
        /// Gets or Sets MaturityDate
        /// </summary>
        [DataMember(Name = "MaturityDate", EmitDefaultValue = false)]
        public DateTime MaturityDate { get; set; }

        /// <summary>
        /// Gets or Sets DiscountMaturityDate
        /// </summary>
        [DataMember(Name = "DiscountMaturityDate", EmitDefaultValue = false)]
        public DateTime DiscountMaturityDate { get; set; }

        /// <summary>
        /// Gets or Sets DayCount
        /// </summary>
        [DataMember(Name = "DayCount", EmitDefaultValue = false)]
        public int DayCount { get; set; }

        /// <summary>
        /// Gets or Sets Amount
        /// </summary>
        [DataMember(Name = "Amount", EmitDefaultValue = false)]
        public double Amount { get; set; }

        /// <summary>
        /// Gets or Sets InterestAmount
        /// </summary>
        [DataMember(Name = "InterestAmount", EmitDefaultValue = false)]
        public double InterestAmount { get; set; }

        /// <summary>
        /// Gets or Sets Bsmv
        /// </summary>
        [DataMember(Name = "Bsmv", EmitDefaultValue = false)]
        public double Bsmv { get; set; }

        /// <summary>
        /// Gets or Sets Kkdf
        /// </summary>
        [DataMember(Name = "Kkdf", EmitDefaultValue = false)]
        public double Kkdf { get; set; }

        /// <summary>
        /// Gets or Sets CashPaymentAmount
        /// </summary>
        [DataMember(Name = "CashPaymentAmount", EmitDefaultValue = false)]
        public double CashPaymentAmount { get; set; }

        /// <summary>
        /// Gets or Sets CostInterestRate
        /// </summary>
        [DataMember(Name = "CostInterestRate", EmitDefaultValue = false)]
        public double CostInterestRate { get; set; }

        /// <summary>
        /// Gets or Sets AppInterestRate
        /// </summary>
        [DataMember(Name = "AppInterestRate", EmitDefaultValue = false)]
        public double AppInterestRate { get; set; }

        /// <summary>
        /// Gets or Sets DiscountInterestRate
        /// </summary>
        [DataMember(Name = "DiscountInterestRate", EmitDefaultValue = false)]
        public double DiscountInterestRate { get; set; }

        /// <summary>
        /// Gets or Sets ModuleReference
        /// </summary>
        [DataMember(Name = "ModuleReference", EmitDefaultValue = true)]
        public string ModuleReference { get; set; }

        /// <summary>
        /// Gets or Sets DocumentNumber
        /// </summary>
        [DataMember(Name = "DocumentNumber", EmitDefaultValue = false)]
        public int DocumentNumber { get; set; }

        /// <summary>
        /// Gets or Sets DraftNumber
        /// </summary>
        [DataMember(Name = "DraftNumber", EmitDefaultValue = false)]
        public int DraftNumber { get; set; }

        /// <summary>
        /// Gets or Sets BankCode
        /// </summary>
        [DataMember(Name = "BankCode", EmitDefaultValue = false)]
        public int BankCode { get; set; }

        /// <summary>
        /// Gets or Sets BranchCode
        /// </summary>
        [DataMember(Name = "BranchCode", EmitDefaultValue = false)]
        public int BranchCode { get; set; }

        /// <summary>
        /// Gets or Sets ChequeNumber
        /// </summary>
        [DataMember(Name = "ChequeNumber", EmitDefaultValue = false)]
        public int ChequeNumber { get; set; }

        /// <summary>
        /// Gets or Sets AccountNumber
        /// </summary>
        [DataMember(Name = "AccountNumber", EmitDefaultValue = true)]
        public string AccountNumber { get; set; }

        /// <summary>
        /// Gets or Sets CurrencyCode
        /// </summary>
        [DataMember(Name = "CurrencyCode", EmitDefaultValue = true)]
        public string CurrencyCode { get; set; }

        /// <summary>
        /// Gets or Sets ChequeStatusCode
        /// </summary>
        [DataMember(Name = "ChequeStatusCode", EmitDefaultValue = true)]
        public string ChequeStatusCode { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name = "Name", EmitDefaultValue = true)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets FiProvisionNumber
        /// </summary>
        [DataMember(Name = "FiProvisionNumber", EmitDefaultValue = false)]
        public int FiProvisionNumber { get; set; }

        /// <summary>
        /// Gets or Sets ExchangeRateReservationNumber
        /// </summary>
        [DataMember(Name = "ExchangeRateReservationNumber", EmitDefaultValue = false)]
        public int ExchangeRateReservationNumber { get; set; }

        /// <summary>
        /// Gets or Sets DiscountInfo
        /// </summary>
        [DataMember(Name = "DiscountInfo", EmitDefaultValue = true)]
        public string DiscountInfo { get; set; }

        /// <summary>
        /// Gets or Sets OldDiscountInfo
        /// </summary>
        [DataMember(Name = "OldDiscountInfo", EmitDefaultValue = true)]
        public string OldDiscountInfo { get; set; }

        /// <summary>
        /// Gets or Sets LastUpdatingChannelCode
        /// </summary>
        [DataMember(Name = "LastUpdatingChannelCode", EmitDefaultValue = true)]
        public string LastUpdatingChannelCode { get; set; }

        /// <summary>
        /// Gets or Sets LastUpdatingTranCode
        /// </summary>
        [DataMember(Name = "LastUpdatingTranCode", EmitDefaultValue = true)]
        public string LastUpdatingTranCode { get; set; }

        /// <summary>
        /// Gets or Sets LastUpdatingUserCode
        /// </summary>
        [DataMember(Name = "LastUpdatingUserCode", EmitDefaultValue = true)]
        public string LastUpdatingUserCode { get; set; }

        /// <summary>
        /// Gets or Sets LastUpdateDate
        /// </summary>
        [DataMember(Name = "LastUpdateDate", EmitDefaultValue = false)]
        public DateTime LastUpdateDate { get; set; }

        /// <summary>
        /// Gets or Sets RecordStatus
        /// </summary>
        [DataMember(Name = "RecordStatus", EmitDefaultValue = true)]
        public string RecordStatus { get; set; }

        /// <summary>
        /// Gets or Sets RowStatus
        /// </summary>
        [DataMember(Name = "RowStatus", EmitDefaultValue = true)]
        public string RowStatus { get; set; }

        /// <summary>
        /// Gets or Sets DebtorType
        /// </summary>
        [DataMember(Name = "DebtorType", EmitDefaultValue = false)]
        public int DebtorType { get; set; }

        /// <summary>
        /// Gets or Sets DebtorTitle
        /// </summary>
        [DataMember(Name = "DebtorTitle", EmitDefaultValue = true)]
        public string DebtorTitle { get; set; }

        /// <summary>
        /// Gets or Sets DebtorName
        /// </summary>
        [DataMember(Name = "DebtorName", EmitDefaultValue = true)]
        public string DebtorName { get; set; }

        /// <summary>
        /// Gets or Sets DebtorSurname
        /// </summary>
        [DataMember(Name = "DebtorSurname", EmitDefaultValue = true)]
        public string DebtorSurname { get; set; }

        /// <summary>
        /// Gets or Sets DebtorAddress
        /// </summary>
        [DataMember(Name = "DebtorAddress", EmitDefaultValue = true)]
        public string DebtorAddress { get; set; }

        /// <summary>
        /// Gets or Sets Micr
        /// </summary>
        [DataMember(Name = "micr", EmitDefaultValue = true)]
        public string Micr { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class DiscountDetail {\n");
            sb.Append("  DiscountReferenceBranchCode: ").Append(DiscountReferenceBranchCode).Append("\n");
            sb.Append("  DiscountReference: ").Append(DiscountReference).Append("\n");
            sb.Append("  DiscountSubType: ").Append(DiscountSubType).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  DiscountId: ").Append(DiscountId).Append("\n");
            sb.Append("  BeginningDate: ").Append(BeginningDate).Append("\n");
            sb.Append("  MaturityDate: ").Append(MaturityDate).Append("\n");
            sb.Append("  DiscountMaturityDate: ").Append(DiscountMaturityDate).Append("\n");
            sb.Append("  DayCount: ").Append(DayCount).Append("\n");
            sb.Append("  Amount: ").Append(Amount).Append("\n");
            sb.Append("  InterestAmount: ").Append(InterestAmount).Append("\n");
            sb.Append("  Bsmv: ").Append(Bsmv).Append("\n");
            sb.Append("  Kkdf: ").Append(Kkdf).Append("\n");
            sb.Append("  CashPaymentAmount: ").Append(CashPaymentAmount).Append("\n");
            sb.Append("  CostInterestRate: ").Append(CostInterestRate).Append("\n");
            sb.Append("  AppInterestRate: ").Append(AppInterestRate).Append("\n");
            sb.Append("  DiscountInterestRate: ").Append(DiscountInterestRate).Append("\n");
            sb.Append("  ModuleReference: ").Append(ModuleReference).Append("\n");
            sb.Append("  DocumentNumber: ").Append(DocumentNumber).Append("\n");
            sb.Append("  DraftNumber: ").Append(DraftNumber).Append("\n");
            sb.Append("  BankCode: ").Append(BankCode).Append("\n");
            sb.Append("  BranchCode: ").Append(BranchCode).Append("\n");
            sb.Append("  ChequeNumber: ").Append(ChequeNumber).Append("\n");
            sb.Append("  AccountNumber: ").Append(AccountNumber).Append("\n");
            sb.Append("  CurrencyCode: ").Append(CurrencyCode).Append("\n");
            sb.Append("  ChequeStatusCode: ").Append(ChequeStatusCode).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  FiProvisionNumber: ").Append(FiProvisionNumber).Append("\n");
            sb.Append("  ExchangeRateReservationNumber: ").Append(ExchangeRateReservationNumber).Append("\n");
            sb.Append("  DiscountInfo: ").Append(DiscountInfo).Append("\n");
            sb.Append("  OldDiscountInfo: ").Append(OldDiscountInfo).Append("\n");
            sb.Append("  LastUpdatingChannelCode: ").Append(LastUpdatingChannelCode).Append("\n");
            sb.Append("  LastUpdatingTranCode: ").Append(LastUpdatingTranCode).Append("\n");
            sb.Append("  LastUpdatingUserCode: ").Append(LastUpdatingUserCode).Append("\n");
            sb.Append("  LastUpdateDate: ").Append(LastUpdateDate).Append("\n");
            sb.Append("  RecordStatus: ").Append(RecordStatus).Append("\n");
            sb.Append("  RowStatus: ").Append(RowStatus).Append("\n");
            sb.Append("  DebtorType: ").Append(DebtorType).Append("\n");
            sb.Append("  DebtorTitle: ").Append(DebtorTitle).Append("\n");
            sb.Append("  DebtorName: ").Append(DebtorName).Append("\n");
            sb.Append("  DebtorSurname: ").Append(DebtorSurname).Append("\n");
            sb.Append("  DebtorAddress: ").Append(DebtorAddress).Append("\n");
            sb.Append("  Micr: ").Append(Micr).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
