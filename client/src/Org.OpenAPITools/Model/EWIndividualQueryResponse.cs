/*
 * Faktoring API - Test
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// EWIndividualQueryResponse
    /// </summary>
    [DataContract(Name = "EWIndividualQueryResponse")]
    public partial class EWIndividualQueryResponse : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EWIndividualQueryResponse" /> class.
        /// </summary>
        /// <param name="accountNumber">accountNumber.</param>
        /// <param name="queryDate">queryDate.</param>
        /// <param name="warningCode">warningCode.</param>
        /// <param name="warningColor">warningColor.</param>
        /// <param name="warningStatus">warningStatus.</param>
        /// <param name="signalType">signalType.</param>
        /// <param name="id">id.</param>
        /// <param name="branchOpinion">branchOpinion.</param>
        /// <param name="hqOpinion">hqOpinion.</param>
        /// <param name="branchOpinionOwner">branchOpinionOwner.</param>
        /// <param name="hqOpinionOwner">hqOpinionOwner.</param>
        /// <param name="opinionStatus">opinionStatus.</param>
        /// <param name="offerBusinessLine">offerBusinessLine.</param>
        /// <param name="customerRating">customerRating.</param>
        /// <param name="branchCode">branchCode.</param>
        /// <param name="creditAllocationDepartmentCode">creditAllocationDepartmentCode.</param>
        /// <param name="firmTotalRisk">firmTotalRisk.</param>
        /// <param name="firmPublicLimit">firmPublicLimit.</param>
        /// <param name="groupTotalRisk">groupTotalRisk.</param>
        /// <param name="groupPublicLimit">groupPublicLimit.</param>
        /// <param name="branchName">branchName.</param>
        /// <param name="customerName">customerName.</param>
        /// <param name="opinionId">opinionId.</param>
        /// <param name="warningExplanation">warningExplanation.</param>
        public EWIndividualQueryResponse(string accountNumber = default(string), DateTime queryDate = default(DateTime), string warningCode = default(string), string warningColor = default(string), string warningStatus = default(string), string signalType = default(string), string id = default(string), string branchOpinion = default(string), string hqOpinion = default(string), string branchOpinionOwner = default(string), string hqOpinionOwner = default(string), string opinionStatus = default(string), string offerBusinessLine = default(string), string customerRating = default(string), int branchCode = default(int), string creditAllocationDepartmentCode = default(string), double firmTotalRisk = default(double), double firmPublicLimit = default(double), double groupTotalRisk = default(double), double groupPublicLimit = default(double), string branchName = default(string), string customerName = default(string), string opinionId = default(string), string warningExplanation = default(string))
        {
            this.AccountNumber = accountNumber;
            this.QueryDate = queryDate;
            this.WarningCode = warningCode;
            this.WarningColor = warningColor;
            this.WarningStatus = warningStatus;
            this.SignalType = signalType;
            this.Id = id;
            this.BranchOpinion = branchOpinion;
            this.HqOpinion = hqOpinion;
            this.BranchOpinionOwner = branchOpinionOwner;
            this.HqOpinionOwner = hqOpinionOwner;
            this.OpinionStatus = opinionStatus;
            this.OfferBusinessLine = offerBusinessLine;
            this.CustomerRating = customerRating;
            this.BranchCode = branchCode;
            this.CreditAllocationDepartmentCode = creditAllocationDepartmentCode;
            this.FirmTotalRisk = firmTotalRisk;
            this.FirmPublicLimit = firmPublicLimit;
            this.GroupTotalRisk = groupTotalRisk;
            this.GroupPublicLimit = groupPublicLimit;
            this.BranchName = branchName;
            this.CustomerName = customerName;
            this.OpinionId = opinionId;
            this.WarningExplanation = warningExplanation;
        }

        /// <summary>
        /// Gets or Sets AccountNumber
        /// </summary>
        [DataMember(Name = "AccountNumber", EmitDefaultValue = true)]
        public string AccountNumber { get; set; }

        /// <summary>
        /// Gets or Sets QueryDate
        /// </summary>
        [DataMember(Name = "QueryDate", EmitDefaultValue = false)]
        public DateTime QueryDate { get; set; }

        /// <summary>
        /// Gets or Sets WarningCode
        /// </summary>
        [DataMember(Name = "WarningCode", EmitDefaultValue = true)]
        public string WarningCode { get; set; }

        /// <summary>
        /// Gets or Sets WarningColor
        /// </summary>
        [DataMember(Name = "WarningColor", EmitDefaultValue = true)]
        public string WarningColor { get; set; }

        /// <summary>
        /// Gets or Sets WarningStatus
        /// </summary>
        [DataMember(Name = "WarningStatus", EmitDefaultValue = true)]
        public string WarningStatus { get; set; }

        /// <summary>
        /// Gets or Sets SignalType
        /// </summary>
        [DataMember(Name = "SignalType", EmitDefaultValue = true)]
        public string SignalType { get; set; }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "Id", EmitDefaultValue = true)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets BranchOpinion
        /// </summary>
        [DataMember(Name = "BranchOpinion", EmitDefaultValue = true)]
        public string BranchOpinion { get; set; }

        /// <summary>
        /// Gets or Sets HqOpinion
        /// </summary>
        [DataMember(Name = "HqOpinion", EmitDefaultValue = true)]
        public string HqOpinion { get; set; }

        /// <summary>
        /// Gets or Sets BranchOpinionOwner
        /// </summary>
        [DataMember(Name = "BranchOpinionOwner", EmitDefaultValue = true)]
        public string BranchOpinionOwner { get; set; }

        /// <summary>
        /// Gets or Sets HqOpinionOwner
        /// </summary>
        [DataMember(Name = "HqOpinionOwner", EmitDefaultValue = true)]
        public string HqOpinionOwner { get; set; }

        /// <summary>
        /// Gets or Sets OpinionStatus
        /// </summary>
        [DataMember(Name = "OpinionStatus", EmitDefaultValue = true)]
        public string OpinionStatus { get; set; }

        /// <summary>
        /// Gets or Sets OfferBusinessLine
        /// </summary>
        [DataMember(Name = "OfferBusinessLine", EmitDefaultValue = true)]
        public string OfferBusinessLine { get; set; }

        /// <summary>
        /// Gets or Sets CustomerRating
        /// </summary>
        [DataMember(Name = "CustomerRating", EmitDefaultValue = true)]
        public string CustomerRating { get; set; }

        /// <summary>
        /// Gets or Sets BranchCode
        /// </summary>
        [DataMember(Name = "BranchCode", EmitDefaultValue = false)]
        public int BranchCode { get; set; }

        /// <summary>
        /// Gets or Sets CreditAllocationDepartmentCode
        /// </summary>
        [DataMember(Name = "CreditAllocationDepartmentCode", EmitDefaultValue = true)]
        public string CreditAllocationDepartmentCode { get; set; }

        /// <summary>
        /// Gets or Sets FirmTotalRisk
        /// </summary>
        [DataMember(Name = "FirmTotalRisk", EmitDefaultValue = false)]
        public double FirmTotalRisk { get; set; }

        /// <summary>
        /// Gets or Sets FirmPublicLimit
        /// </summary>
        [DataMember(Name = "FirmPublicLimit", EmitDefaultValue = false)]
        public double FirmPublicLimit { get; set; }

        /// <summary>
        /// Gets or Sets GroupTotalRisk
        /// </summary>
        [DataMember(Name = "GroupTotalRisk", EmitDefaultValue = false)]
        public double GroupTotalRisk { get; set; }

        /// <summary>
        /// Gets or Sets GroupPublicLimit
        /// </summary>
        [DataMember(Name = "GroupPublicLimit", EmitDefaultValue = false)]
        public double GroupPublicLimit { get; set; }

        /// <summary>
        /// Gets or Sets BranchName
        /// </summary>
        [DataMember(Name = "BranchName", EmitDefaultValue = true)]
        public string BranchName { get; set; }

        /// <summary>
        /// Gets or Sets CustomerName
        /// </summary>
        [DataMember(Name = "CustomerName", EmitDefaultValue = true)]
        public string CustomerName { get; set; }

        /// <summary>
        /// Gets or Sets OpinionId
        /// </summary>
        [DataMember(Name = "OpinionId", EmitDefaultValue = true)]
        public string OpinionId { get; set; }

        /// <summary>
        /// Gets or Sets WarningExplanation
        /// </summary>
        [DataMember(Name = "WarningExplanation", EmitDefaultValue = true)]
        public string WarningExplanation { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class EWIndividualQueryResponse {\n");
            sb.Append("  AccountNumber: ").Append(AccountNumber).Append("\n");
            sb.Append("  QueryDate: ").Append(QueryDate).Append("\n");
            sb.Append("  WarningCode: ").Append(WarningCode).Append("\n");
            sb.Append("  WarningColor: ").Append(WarningColor).Append("\n");
            sb.Append("  WarningStatus: ").Append(WarningStatus).Append("\n");
            sb.Append("  SignalType: ").Append(SignalType).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  BranchOpinion: ").Append(BranchOpinion).Append("\n");
            sb.Append("  HqOpinion: ").Append(HqOpinion).Append("\n");
            sb.Append("  BranchOpinionOwner: ").Append(BranchOpinionOwner).Append("\n");
            sb.Append("  HqOpinionOwner: ").Append(HqOpinionOwner).Append("\n");
            sb.Append("  OpinionStatus: ").Append(OpinionStatus).Append("\n");
            sb.Append("  OfferBusinessLine: ").Append(OfferBusinessLine).Append("\n");
            sb.Append("  CustomerRating: ").Append(CustomerRating).Append("\n");
            sb.Append("  BranchCode: ").Append(BranchCode).Append("\n");
            sb.Append("  CreditAllocationDepartmentCode: ").Append(CreditAllocationDepartmentCode).Append("\n");
            sb.Append("  FirmTotalRisk: ").Append(FirmTotalRisk).Append("\n");
            sb.Append("  FirmPublicLimit: ").Append(FirmPublicLimit).Append("\n");
            sb.Append("  GroupTotalRisk: ").Append(GroupTotalRisk).Append("\n");
            sb.Append("  GroupPublicLimit: ").Append(GroupPublicLimit).Append("\n");
            sb.Append("  BranchName: ").Append(BranchName).Append("\n");
            sb.Append("  CustomerName: ").Append(CustomerName).Append("\n");
            sb.Append("  OpinionId: ").Append(OpinionId).Append("\n");
            sb.Append("  WarningExplanation: ").Append(WarningExplanation).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
