/*
 * Faktoring API - Test
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using Org.OpenAPITools.Client;
using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IMersisApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// Mersis Talep Detay Sonuç
        /// </summary>
        /// <remarks>
        /// Mersis Talep Detay Sonuç
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="mersisDetailResultRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>MersisDetailResultResponse</returns>
        MersisDetailResultResponse ApiV1MersisMersisDetailResultPost(MersisDetailResultRequest? mersisDetailResultRequest = default(MersisDetailResultRequest?), int operationIndex = 0);

        /// <summary>
        /// Mersis Talep Detay Sonuç
        /// </summary>
        /// <remarks>
        /// Mersis Talep Detay Sonuç
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="mersisDetailResultRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of MersisDetailResultResponse</returns>
        ApiResponse<MersisDetailResultResponse> ApiV1MersisMersisDetailResultPostWithHttpInfo(MersisDetailResultRequest? mersisDetailResultRequest = default(MersisDetailResultRequest?), int operationIndex = 0);
        /// <summary>
        /// Mersis Talep Detay Başlat
        /// </summary>
        /// <remarks>
        /// Mersis Talep Detay Başlat
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="mersisDetailStartRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>MersisDetailStartResponse</returns>
        MersisDetailStartResponse ApiV1MersisMersisDetailStartPost(MersisDetailStartRequest? mersisDetailStartRequest = default(MersisDetailStartRequest?), int operationIndex = 0);

        /// <summary>
        /// Mersis Talep Detay Başlat
        /// </summary>
        /// <remarks>
        /// Mersis Talep Detay Başlat
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="mersisDetailStartRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of MersisDetailStartResponse</returns>
        ApiResponse<MersisDetailStartResponse> ApiV1MersisMersisDetailStartPostWithHttpInfo(MersisDetailStartRequest? mersisDetailStartRequest = default(MersisDetailStartRequest?), int operationIndex = 0);
        /// <summary>
        /// Mersis Talep Sonuç
        /// </summary>
        /// <remarks>
        /// Mersis Talep Sonuç
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="mersisRequestResultRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>MersisRequestResultResponse</returns>
        MersisRequestResultResponse ApiV1MersisMersisRequestResultPost(MersisRequestResultRequest? mersisRequestResultRequest = default(MersisRequestResultRequest?), int operationIndex = 0);

        /// <summary>
        /// Mersis Talep Sonuç
        /// </summary>
        /// <remarks>
        /// Mersis Talep Sonuç
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="mersisRequestResultRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of MersisRequestResultResponse</returns>
        ApiResponse<MersisRequestResultResponse> ApiV1MersisMersisRequestResultPostWithHttpInfo(MersisRequestResultRequest? mersisRequestResultRequest = default(MersisRequestResultRequest?), int operationIndex = 0);
        /// <summary>
        /// Mersis Talep Başlat
        /// </summary>
        /// <remarks>
        /// Mersis Talep Başlat
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="mersisRequestStartRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>MersisRequestStartResponse</returns>
        MersisRequestStartResponse ApiV1MersisMersisRequestStartPost(MersisRequestStartRequest? mersisRequestStartRequest = default(MersisRequestStartRequest?), int operationIndex = 0);

        /// <summary>
        /// Mersis Talep Başlat
        /// </summary>
        /// <remarks>
        /// Mersis Talep Başlat
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="mersisRequestStartRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of MersisRequestStartResponse</returns>
        ApiResponse<MersisRequestStartResponse> ApiV1MersisMersisRequestStartPostWithHttpInfo(MersisRequestStartRequest? mersisRequestStartRequest = default(MersisRequestStartRequest?), int operationIndex = 0);
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IMersisApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// Mersis Talep Detay Sonuç
        /// </summary>
        /// <remarks>
        /// Mersis Talep Detay Sonuç
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="mersisDetailResultRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of MersisDetailResultResponse</returns>
        System.Threading.Tasks.Task<MersisDetailResultResponse> ApiV1MersisMersisDetailResultPostAsync(MersisDetailResultRequest? mersisDetailResultRequest = default(MersisDetailResultRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Mersis Talep Detay Sonuç
        /// </summary>
        /// <remarks>
        /// Mersis Talep Detay Sonuç
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="mersisDetailResultRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (MersisDetailResultResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<MersisDetailResultResponse>> ApiV1MersisMersisDetailResultPostWithHttpInfoAsync(MersisDetailResultRequest? mersisDetailResultRequest = default(MersisDetailResultRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Mersis Talep Detay Başlat
        /// </summary>
        /// <remarks>
        /// Mersis Talep Detay Başlat
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="mersisDetailStartRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of MersisDetailStartResponse</returns>
        System.Threading.Tasks.Task<MersisDetailStartResponse> ApiV1MersisMersisDetailStartPostAsync(MersisDetailStartRequest? mersisDetailStartRequest = default(MersisDetailStartRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Mersis Talep Detay Başlat
        /// </summary>
        /// <remarks>
        /// Mersis Talep Detay Başlat
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="mersisDetailStartRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (MersisDetailStartResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<MersisDetailStartResponse>> ApiV1MersisMersisDetailStartPostWithHttpInfoAsync(MersisDetailStartRequest? mersisDetailStartRequest = default(MersisDetailStartRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Mersis Talep Sonuç
        /// </summary>
        /// <remarks>
        /// Mersis Talep Sonuç
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="mersisRequestResultRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of MersisRequestResultResponse</returns>
        System.Threading.Tasks.Task<MersisRequestResultResponse> ApiV1MersisMersisRequestResultPostAsync(MersisRequestResultRequest? mersisRequestResultRequest = default(MersisRequestResultRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Mersis Talep Sonuç
        /// </summary>
        /// <remarks>
        /// Mersis Talep Sonuç
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="mersisRequestResultRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (MersisRequestResultResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<MersisRequestResultResponse>> ApiV1MersisMersisRequestResultPostWithHttpInfoAsync(MersisRequestResultRequest? mersisRequestResultRequest = default(MersisRequestResultRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Mersis Talep Başlat
        /// </summary>
        /// <remarks>
        /// Mersis Talep Başlat
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="mersisRequestStartRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of MersisRequestStartResponse</returns>
        System.Threading.Tasks.Task<MersisRequestStartResponse> ApiV1MersisMersisRequestStartPostAsync(MersisRequestStartRequest? mersisRequestStartRequest = default(MersisRequestStartRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Mersis Talep Başlat
        /// </summary>
        /// <remarks>
        /// Mersis Talep Başlat
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="mersisRequestStartRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (MersisRequestStartResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<MersisRequestStartResponse>> ApiV1MersisMersisRequestStartPostWithHttpInfoAsync(MersisRequestStartRequest? mersisRequestStartRequest = default(MersisRequestStartRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IMersisApi : IMersisApiSync, IMersisApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class MersisApi : IMersisApi
    {
        private Org.OpenAPITools.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="MersisApi"/> class.
        /// </summary>
        /// <returns></returns>
        public MersisApi() : this((string)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="MersisApi"/> class.
        /// </summary>
        /// <returns></returns>
        public MersisApi(string basePath)
        {
            this.Configuration = Org.OpenAPITools.Client.Configuration.MergeConfigurations(
                Org.OpenAPITools.Client.GlobalConfiguration.Instance,
                new Org.OpenAPITools.Client.Configuration { BasePath = basePath }
            );
            this.Client = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="MersisApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public MersisApi(Org.OpenAPITools.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = Org.OpenAPITools.Client.Configuration.MergeConfigurations(
                Org.OpenAPITools.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="MersisApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public MersisApi(Org.OpenAPITools.Client.ISynchronousClient client, Org.OpenAPITools.Client.IAsynchronousClient asyncClient, Org.OpenAPITools.Client.IReadableConfiguration configuration)
        {
            if (client == null) throw new ArgumentNullException("client");
            if (asyncClient == null) throw new ArgumentNullException("asyncClient");
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public Org.OpenAPITools.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public Org.OpenAPITools.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public string GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public Org.OpenAPITools.Client.IReadableConfiguration Configuration { get; set; }

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public Org.OpenAPITools.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Mersis Talep Detay Sonuç Mersis Talep Detay Sonuç
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="mersisDetailResultRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>MersisDetailResultResponse</returns>
        public MersisDetailResultResponse ApiV1MersisMersisDetailResultPost(MersisDetailResultRequest? mersisDetailResultRequest = default(MersisDetailResultRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<MersisDetailResultResponse> localVarResponse = ApiV1MersisMersisDetailResultPostWithHttpInfo(mersisDetailResultRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Mersis Talep Detay Sonuç Mersis Talep Detay Sonuç
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="mersisDetailResultRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of MersisDetailResultResponse</returns>
        public Org.OpenAPITools.Client.ApiResponse<MersisDetailResultResponse> ApiV1MersisMersisDetailResultPostWithHttpInfo(MersisDetailResultRequest? mersisDetailResultRequest = default(MersisDetailResultRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = mersisDetailResultRequest;

            localVarRequestOptions.Operation = "MersisApi.ApiV1MersisMersisDetailResultPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Post<MersisDetailResultResponse>("/api/v1/Mersis/MersisDetailResult", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1MersisMersisDetailResultPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Mersis Talep Detay Sonuç Mersis Talep Detay Sonuç
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="mersisDetailResultRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of MersisDetailResultResponse</returns>
        public async System.Threading.Tasks.Task<MersisDetailResultResponse> ApiV1MersisMersisDetailResultPostAsync(MersisDetailResultRequest? mersisDetailResultRequest = default(MersisDetailResultRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<MersisDetailResultResponse> localVarResponse = await ApiV1MersisMersisDetailResultPostWithHttpInfoAsync(mersisDetailResultRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Mersis Talep Detay Sonuç Mersis Talep Detay Sonuç
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="mersisDetailResultRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (MersisDetailResultResponse)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<MersisDetailResultResponse>> ApiV1MersisMersisDetailResultPostWithHttpInfoAsync(MersisDetailResultRequest? mersisDetailResultRequest = default(MersisDetailResultRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = mersisDetailResultRequest;

            localVarRequestOptions.Operation = "MersisApi.ApiV1MersisMersisDetailResultPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<MersisDetailResultResponse>("/api/v1/Mersis/MersisDetailResult", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1MersisMersisDetailResultPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Mersis Talep Detay Başlat Mersis Talep Detay Başlat
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="mersisDetailStartRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>MersisDetailStartResponse</returns>
        public MersisDetailStartResponse ApiV1MersisMersisDetailStartPost(MersisDetailStartRequest? mersisDetailStartRequest = default(MersisDetailStartRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<MersisDetailStartResponse> localVarResponse = ApiV1MersisMersisDetailStartPostWithHttpInfo(mersisDetailStartRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Mersis Talep Detay Başlat Mersis Talep Detay Başlat
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="mersisDetailStartRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of MersisDetailStartResponse</returns>
        public Org.OpenAPITools.Client.ApiResponse<MersisDetailStartResponse> ApiV1MersisMersisDetailStartPostWithHttpInfo(MersisDetailStartRequest? mersisDetailStartRequest = default(MersisDetailStartRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = mersisDetailStartRequest;

            localVarRequestOptions.Operation = "MersisApi.ApiV1MersisMersisDetailStartPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Post<MersisDetailStartResponse>("/api/v1/Mersis/MersisDetailStart", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1MersisMersisDetailStartPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Mersis Talep Detay Başlat Mersis Talep Detay Başlat
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="mersisDetailStartRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of MersisDetailStartResponse</returns>
        public async System.Threading.Tasks.Task<MersisDetailStartResponse> ApiV1MersisMersisDetailStartPostAsync(MersisDetailStartRequest? mersisDetailStartRequest = default(MersisDetailStartRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<MersisDetailStartResponse> localVarResponse = await ApiV1MersisMersisDetailStartPostWithHttpInfoAsync(mersisDetailStartRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Mersis Talep Detay Başlat Mersis Talep Detay Başlat
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="mersisDetailStartRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (MersisDetailStartResponse)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<MersisDetailStartResponse>> ApiV1MersisMersisDetailStartPostWithHttpInfoAsync(MersisDetailStartRequest? mersisDetailStartRequest = default(MersisDetailStartRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = mersisDetailStartRequest;

            localVarRequestOptions.Operation = "MersisApi.ApiV1MersisMersisDetailStartPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<MersisDetailStartResponse>("/api/v1/Mersis/MersisDetailStart", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1MersisMersisDetailStartPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Mersis Talep Sonuç Mersis Talep Sonuç
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="mersisRequestResultRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>MersisRequestResultResponse</returns>
        public MersisRequestResultResponse ApiV1MersisMersisRequestResultPost(MersisRequestResultRequest? mersisRequestResultRequest = default(MersisRequestResultRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<MersisRequestResultResponse> localVarResponse = ApiV1MersisMersisRequestResultPostWithHttpInfo(mersisRequestResultRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Mersis Talep Sonuç Mersis Talep Sonuç
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="mersisRequestResultRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of MersisRequestResultResponse</returns>
        public Org.OpenAPITools.Client.ApiResponse<MersisRequestResultResponse> ApiV1MersisMersisRequestResultPostWithHttpInfo(MersisRequestResultRequest? mersisRequestResultRequest = default(MersisRequestResultRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = mersisRequestResultRequest;

            localVarRequestOptions.Operation = "MersisApi.ApiV1MersisMersisRequestResultPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Post<MersisRequestResultResponse>("/api/v1/Mersis/MersisRequestResult", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1MersisMersisRequestResultPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Mersis Talep Sonuç Mersis Talep Sonuç
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="mersisRequestResultRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of MersisRequestResultResponse</returns>
        public async System.Threading.Tasks.Task<MersisRequestResultResponse> ApiV1MersisMersisRequestResultPostAsync(MersisRequestResultRequest? mersisRequestResultRequest = default(MersisRequestResultRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<MersisRequestResultResponse> localVarResponse = await ApiV1MersisMersisRequestResultPostWithHttpInfoAsync(mersisRequestResultRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Mersis Talep Sonuç Mersis Talep Sonuç
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="mersisRequestResultRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (MersisRequestResultResponse)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<MersisRequestResultResponse>> ApiV1MersisMersisRequestResultPostWithHttpInfoAsync(MersisRequestResultRequest? mersisRequestResultRequest = default(MersisRequestResultRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = mersisRequestResultRequest;

            localVarRequestOptions.Operation = "MersisApi.ApiV1MersisMersisRequestResultPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<MersisRequestResultResponse>("/api/v1/Mersis/MersisRequestResult", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1MersisMersisRequestResultPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Mersis Talep Başlat Mersis Talep Başlat
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="mersisRequestStartRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>MersisRequestStartResponse</returns>
        public MersisRequestStartResponse ApiV1MersisMersisRequestStartPost(MersisRequestStartRequest? mersisRequestStartRequest = default(MersisRequestStartRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<MersisRequestStartResponse> localVarResponse = ApiV1MersisMersisRequestStartPostWithHttpInfo(mersisRequestStartRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Mersis Talep Başlat Mersis Talep Başlat
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="mersisRequestStartRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of MersisRequestStartResponse</returns>
        public Org.OpenAPITools.Client.ApiResponse<MersisRequestStartResponse> ApiV1MersisMersisRequestStartPostWithHttpInfo(MersisRequestStartRequest? mersisRequestStartRequest = default(MersisRequestStartRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = mersisRequestStartRequest;

            localVarRequestOptions.Operation = "MersisApi.ApiV1MersisMersisRequestStartPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Post<MersisRequestStartResponse>("/api/v1/Mersis/MersisRequestStart", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1MersisMersisRequestStartPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Mersis Talep Başlat Mersis Talep Başlat
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="mersisRequestStartRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of MersisRequestStartResponse</returns>
        public async System.Threading.Tasks.Task<MersisRequestStartResponse> ApiV1MersisMersisRequestStartPostAsync(MersisRequestStartRequest? mersisRequestStartRequest = default(MersisRequestStartRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<MersisRequestStartResponse> localVarResponse = await ApiV1MersisMersisRequestStartPostWithHttpInfoAsync(mersisRequestStartRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Mersis Talep Başlat Mersis Talep Başlat
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="mersisRequestStartRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (MersisRequestStartResponse)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<MersisRequestStartResponse>> ApiV1MersisMersisRequestStartPostWithHttpInfoAsync(MersisRequestStartRequest? mersisRequestStartRequest = default(MersisRequestStartRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = mersisRequestStartRequest;

            localVarRequestOptions.Operation = "MersisApi.ApiV1MersisMersisRequestStartPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<MersisRequestStartResponse>("/api/v1/Mersis/MersisRequestStart", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1MersisMersisRequestStartPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

    }
}
