/*
 * Faktoring API - Test
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using Org.OpenAPITools.Client;
using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IChequeBpmApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// Keşidecinin Bankamızdaki son 2 yıldaki çek tahsil performansı
        /// </summary>
        /// <remarks>
        /// Keşidecinin Bankamızdaki son 2 yıldaki çek tahsil performansı
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="chequeCollectPerformanceRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ChequePerformanceResponse</returns>
        ChequePerformanceResponse ApiV1ChequeBpmChequeCollectPerformancePost(ChequeCollectPerformanceRequest? chequeCollectPerformanceRequest = default(ChequeCollectPerformanceRequest?), int operationIndex = 0);

        /// <summary>
        /// Keşidecinin Bankamızdaki son 2 yıldaki çek tahsil performansı
        /// </summary>
        /// <remarks>
        /// Keşidecinin Bankamızdaki son 2 yıldaki çek tahsil performansı
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="chequeCollectPerformanceRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ChequePerformanceResponse</returns>
        ApiResponse<ChequePerformanceResponse> ApiV1ChequeBpmChequeCollectPerformancePostWithHttpInfo(ChequeCollectPerformanceRequest? chequeCollectPerformanceRequest = default(ChequeCollectPerformanceRequest?), int operationIndex = 0);
        /// <summary>
        /// Karşılıksız Çek Bilgisi
        /// </summary>
        /// <remarks>
        /// Karşılıksız Çek Bilgisi
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="chequeIntelligenceInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ChequeIntResponse</returns>
        ChequeIntResponse ApiV1ChequeBpmChequeIntelligenceInfoPost(ChequeIntelligenceInfoRequest? chequeIntelligenceInfoRequest = default(ChequeIntelligenceInfoRequest?), int operationIndex = 0);

        /// <summary>
        /// Karşılıksız Çek Bilgisi
        /// </summary>
        /// <remarks>
        /// Karşılıksız Çek Bilgisi
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="chequeIntelligenceInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ChequeIntResponse</returns>
        ApiResponse<ChequeIntResponse> ApiV1ChequeBpmChequeIntelligenceInfoPostWithHttpInfo(ChequeIntelligenceInfoRequest? chequeIntelligenceInfoRequest = default(ChequeIntelligenceInfoRequest?), int operationIndex = 0);
        /// <summary>
        /// Kurumsal KKB İlişkileri
        /// </summary>
        /// <remarks>
        /// Kurumsal KKB İlişkileri
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="corporateKKBRelationRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>RelationResponse</returns>
        RelationResponse ApiV1ChequeBpmCorporateKKBRelationPost(CorporateKKBRelationRequest? corporateKKBRelationRequest = default(CorporateKKBRelationRequest?), int operationIndex = 0);

        /// <summary>
        /// Kurumsal KKB İlişkileri
        /// </summary>
        /// <remarks>
        /// Kurumsal KKB İlişkileri
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="corporateKKBRelationRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of RelationResponse</returns>
        ApiResponse<RelationResponse> ApiV1ChequeBpmCorporateKKBRelationPostWithHttpInfo(CorporateKKBRelationRequest? corporateKKBRelationRequest = default(CorporateKKBRelationRequest?), int operationIndex = 0);
        /// <summary>
        /// Kurumsal KKB Sorgulama
        /// </summary>
        /// <remarks>
        /// Kurumsal KKB Sorgulama
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="corporateKKBSummaryRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>KKBResponse</returns>
        KKBResponse ApiV1ChequeBpmCorporateKKBSummaryPost(CorporateKKBSummaryRequest? corporateKKBSummaryRequest = default(CorporateKKBSummaryRequest?), int operationIndex = 0);

        /// <summary>
        /// Kurumsal KKB Sorgulama
        /// </summary>
        /// <remarks>
        /// Kurumsal KKB Sorgulama
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="corporateKKBSummaryRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of KKBResponse</returns>
        ApiResponse<KKBResponse> ApiV1ChequeBpmCorporateKKBSummaryPostWithHttpInfo(CorporateKKBSummaryRequest? corporateKKBSummaryRequest = default(CorporateKKBSummaryRequest?), int operationIndex = 0);
        /// <summary>
        /// Müşteri Limit Risk
        /// </summary>
        /// <remarks>
        /// Müşteri Limit Risk
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="customerGroupLimitRiskRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>LimitRiskResponse</returns>
        LimitRiskResponse ApiV1ChequeBpmCustomerGroupLimitRiskPost(CustomerGroupLimitRiskRequest? customerGroupLimitRiskRequest = default(CustomerGroupLimitRiskRequest?), int operationIndex = 0);

        /// <summary>
        /// Müşteri Limit Risk
        /// </summary>
        /// <remarks>
        /// Müşteri Limit Risk
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="customerGroupLimitRiskRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of LimitRiskResponse</returns>
        ApiResponse<LimitRiskResponse> ApiV1ChequeBpmCustomerGroupLimitRiskPostWithHttpInfo(CustomerGroupLimitRiskRequest? customerGroupLimitRiskRequest = default(CustomerGroupLimitRiskRequest?), int operationIndex = 0);
        /// <summary>
        /// Bankamız İlişkiler
        /// </summary>
        /// <remarks>
        /// Bankamız İlişkiler
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="customerRelationRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>CustomerRelResponse</returns>
        CustomerRelResponse ApiV1ChequeBpmCustomerRelationPost(CustomerRelationRequest? customerRelationRequest = default(CustomerRelationRequest?), int operationIndex = 0);

        /// <summary>
        /// Bankamız İlişkiler
        /// </summary>
        /// <remarks>
        /// Bankamız İlişkiler
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="customerRelationRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of CustomerRelResponse</returns>
        ApiResponse<CustomerRelResponse> ApiV1ChequeBpmCustomerRelationPostWithHttpInfo(CustomerRelationRequest? customerRelationRequest = default(CustomerRelationRequest?), int operationIndex = 0);
        /// <summary>
        /// E-haciz sorgulaması
        /// </summary>
        /// <remarks>
        /// E-haciz sorgulaması
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="eAttachmentInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>HacizResponse</returns>
        HacizResponse ApiV1ChequeBpmEAttachmentInfoPost(EAttachmentInfoRequest? eAttachmentInfoRequest = default(EAttachmentInfoRequest?), int operationIndex = 0);

        /// <summary>
        /// E-haciz sorgulaması
        /// </summary>
        /// <remarks>
        /// E-haciz sorgulaması
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="eAttachmentInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of HacizResponse</returns>
        ApiResponse<HacizResponse> ApiV1ChequeBpmEAttachmentInfoPostWithHttpInfo(EAttachmentInfoRequest? eAttachmentInfoRequest = default(EAttachmentInfoRequest?), int operationIndex = 0);
        /// <summary>
        /// Bankamız Erken Uyarı Bilgileri Servisi
        /// </summary>
        /// <remarks>
        /// Bankamız Erken Uyarı Bilgileri Servisi
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="earlyWarningInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>EWResponse</returns>
        EWResponse ApiV1ChequeBpmEarlyWarningInfoPost(EarlyWarningInfoRequest? earlyWarningInfoRequest = default(EarlyWarningInfoRequest?), int operationIndex = 0);

        /// <summary>
        /// Bankamız Erken Uyarı Bilgileri Servisi
        /// </summary>
        /// <remarks>
        /// Bankamız Erken Uyarı Bilgileri Servisi
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="earlyWarningInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of EWResponse</returns>
        ApiResponse<EWResponse> ApiV1ChequeBpmEarlyWarningInfoPostWithHttpInfo(EarlyWarningInfoRequest? earlyWarningInfoRequest = default(EarlyWarningInfoRequest?), int operationIndex = 0);
        /// <summary>
        /// Teminat Depomuzdaki Çekler
        /// </summary>
        /// <remarks>
        /// Teminat Depomuzdaki Çekler
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="existingChequeInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ExistingChequeResponse</returns>
        ExistingChequeResponse ApiV1ChequeBpmExistingChequeInfoPost(ExistingChequeInfoRequest? existingChequeInfoRequest = default(ExistingChequeInfoRequest?), int operationIndex = 0);

        /// <summary>
        /// Teminat Depomuzdaki Çekler
        /// </summary>
        /// <remarks>
        /// Teminat Depomuzdaki Çekler
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="existingChequeInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ExistingChequeResponse</returns>
        ApiResponse<ExistingChequeResponse> ApiV1ChequeBpmExistingChequeInfoPostWithHttpInfo(ExistingChequeInfoRequest? existingChequeInfoRequest = default(ExistingChequeInfoRequest?), int operationIndex = 0);
        /// <summary>
        /// Çek Bilgisi Banka Veritabanına yazılması
        /// </summary>
        /// <remarks>
        /// Çek Bilgisi Banka Veritabanına yazılması
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="bpmLogRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>BPMLogResponse</returns>
        BPMLogResponse ApiV1ChequeBpmGetChequeLogPost(BpmLogRequest? bpmLogRequest = default(BpmLogRequest?), int operationIndex = 0);

        /// <summary>
        /// Çek Bilgisi Banka Veritabanına yazılması
        /// </summary>
        /// <remarks>
        /// Çek Bilgisi Banka Veritabanına yazılması
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="bpmLogRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of BPMLogResponse</returns>
        ApiResponse<BPMLogResponse> ApiV1ChequeBpmGetChequeLogPostWithHttpInfo(BpmLogRequest? bpmLogRequest = default(BpmLogRequest?), int operationIndex = 0);
        /// <summary>
        /// Firma Alıcı Limit
        /// </summary>
        /// <remarks>
        /// Firma Alıcı Limit
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="factoringBuyerLimitRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>BuyerLimitResponse</returns>
        BuyerLimitResponse ApiV1ChequeBpmGetFactoringBuyerLimitPost(FactoringBuyerLimitRequest? factoringBuyerLimitRequest = default(FactoringBuyerLimitRequest?), int operationIndex = 0);

        /// <summary>
        /// Firma Alıcı Limit
        /// </summary>
        /// <remarks>
        /// Firma Alıcı Limit
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="factoringBuyerLimitRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of BuyerLimitResponse</returns>
        ApiResponse<BuyerLimitResponse> ApiV1ChequeBpmGetFactoringBuyerLimitPostWithHttpInfo(FactoringBuyerLimitRequest? factoringBuyerLimitRequest = default(FactoringBuyerLimitRequest?), int operationIndex = 0);
        /// <summary>
        /// Klrte Servisi
        /// </summary>
        /// <remarks>
        /// Klrte Servisi
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="klrteServisRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>KlrteServisResponse</returns>
        KlrteServisResponse ApiV1ChequeBpmGetKlrtePost(KlrteServisRequest? klrteServisRequest = default(KlrteServisRequest?), int operationIndex = 0);

        /// <summary>
        /// Klrte Servisi
        /// </summary>
        /// <remarks>
        /// Klrte Servisi
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="klrteServisRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of KlrteServisResponse</returns>
        ApiResponse<KlrteServisResponse> ApiV1ChequeBpmGetKlrtePostWithHttpInfo(KlrteServisRequest? klrteServisRequest = default(KlrteServisRequest?), int operationIndex = 0);
        /// <summary>
        /// Kur Bilgisi
        /// </summary>
        /// <remarks>
        /// Kur Bilgisi
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dovizCinsi"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>double</returns>
        double ApiV1ChequeBpmGetRateGet(string? dovizCinsi = default(string?), int operationIndex = 0);

        /// <summary>
        /// Kur Bilgisi
        /// </summary>
        /// <remarks>
        /// Kur Bilgisi
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dovizCinsi"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of double</returns>
        ApiResponse<double> ApiV1ChequeBpmGetRateGetWithHttpInfo(string? dovizCinsi = default(string?), int operationIndex = 0);
        /// <summary>
        /// İcra Detay Bilgileri
        /// </summary>
        /// <remarks>
        /// İcra Detay Bilgileri
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="icraInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>IcraResponse</returns>
        IcraResponse ApiV1ChequeBpmIcraInfoPost(IcraInfoRequest? icraInfoRequest = default(IcraInfoRequest?), int operationIndex = 0);

        /// <summary>
        /// İcra Detay Bilgileri
        /// </summary>
        /// <remarks>
        /// İcra Detay Bilgileri
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="icraInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of IcraResponse</returns>
        ApiResponse<IcraResponse> ApiV1ChequeBpmIcraInfoPostWithHttpInfo(IcraInfoRequest? icraInfoRequest = default(IcraInfoRequest?), int operationIndex = 0);
        /// <summary>
        /// İhale Yasaklılık
        /// </summary>
        /// <remarks>
        /// İhale Yasaklılık
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="ihaleYasaklilikInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>IhaleYAsaklilikResponse</returns>
        IhaleYAsaklilikResponse ApiV1ChequeBpmIhaleYasaklilikInfoPost(IhaleYasaklilikInfoRequest? ihaleYasaklilikInfoRequest = default(IhaleYasaklilikInfoRequest?), int operationIndex = 0);

        /// <summary>
        /// İhale Yasaklılık
        /// </summary>
        /// <remarks>
        /// İhale Yasaklılık
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="ihaleYasaklilikInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of IhaleYAsaklilikResponse</returns>
        ApiResponse<IhaleYAsaklilikResponse> ApiV1ChequeBpmIhaleYasaklilikInfoPostWithHttpInfo(IhaleYasaklilikInfoRequest? ihaleYasaklilikInfoRequest = default(IhaleYasaklilikInfoRequest?), int operationIndex = 0);
        /// <summary>
        /// Bireysel KKB Sorgulama
        /// </summary>
        /// <remarks>
        /// Bireysel KKB Sorgulama
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="individualKKBSummaryRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>KKBSummaryResponse</returns>
        KKBSummaryResponse ApiV1ChequeBpmIndividualKKBSummaryPost(IndividualKKBSummaryRequest? individualKKBSummaryRequest = default(IndividualKKBSummaryRequest?), int operationIndex = 0);

        /// <summary>
        /// Bireysel KKB Sorgulama
        /// </summary>
        /// <remarks>
        /// Bireysel KKB Sorgulama
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="individualKKBSummaryRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of KKBSummaryResponse</returns>
        ApiResponse<KKBSummaryResponse> ApiV1ChequeBpmIndividualKKBSummaryPostWithHttpInfo(IndividualKKBSummaryRequest? individualKKBSummaryRequest = default(IndividualKKBSummaryRequest?), int operationIndex = 0);
        /// <summary>
        /// KKB Çek Raporu
        /// </summary>
        /// <remarks>
        /// KKB Çek Raporu
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="kKBChequeInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>KKBChequeResponse</returns>
        KKBChequeResponse ApiV1ChequeBpmKKBChequeInfoPost(KKBChequeInfoRequest? kKBChequeInfoRequest = default(KKBChequeInfoRequest?), int operationIndex = 0);

        /// <summary>
        /// KKB Çek Raporu
        /// </summary>
        /// <remarks>
        /// KKB Çek Raporu
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="kKBChequeInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of KKBChequeResponse</returns>
        ApiResponse<KKBChequeResponse> ApiV1ChequeBpmKKBChequeInfoPostWithHttpInfo(KKBChequeInfoRequest? kKBChequeInfoRequest = default(KKBChequeInfoRequest?), int operationIndex = 0);
        /// <summary>
        /// KKB Çek Durum Sorgulama
        /// </summary>
        /// <remarks>
        /// KKB Çek Durum Sorgulama
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="kKBChequeStatusRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ChequeStatusResponse</returns>
        ChequeStatusResponse ApiV1ChequeBpmKKBChequeStatusPost(KKBChequeStatusRequest? kKBChequeStatusRequest = default(KKBChequeStatusRequest?), int operationIndex = 0);

        /// <summary>
        /// KKB Çek Durum Sorgulama
        /// </summary>
        /// <remarks>
        /// KKB Çek Durum Sorgulama
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="kKBChequeStatusRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ChequeStatusResponse</returns>
        ApiResponse<ChequeStatusResponse> ApiV1ChequeBpmKKBChequeStatusPostWithHttpInfo(KKBChequeStatusRequest? kKBChequeStatusRequest = default(KKBChequeStatusRequest?), int operationIndex = 0);
        /// <summary>
        /// KKB Çapraz Çek Sorgulama
        /// </summary>
        /// <remarks>
        /// KKB Çapraz Çek Sorgulama
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="kKBCrossChequeInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>CaprazCekIliskileriSorguResponse</returns>
        CaprazCekIliskileriSorguResponse ApiV1ChequeBpmKKBCrossChequeInfoPost(KKBCrossChequeInfoRequest? kKBCrossChequeInfoRequest = default(KKBCrossChequeInfoRequest?), int operationIndex = 0);

        /// <summary>
        /// KKB Çapraz Çek Sorgulama
        /// </summary>
        /// <remarks>
        /// KKB Çapraz Çek Sorgulama
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="kKBCrossChequeInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of CaprazCekIliskileriSorguResponse</returns>
        ApiResponse<CaprazCekIliskileriSorguResponse> ApiV1ChequeBpmKKBCrossChequeInfoPostWithHttpInfo(KKBCrossChequeInfoRequest? kKBCrossChequeInfoRequest = default(KKBCrossChequeInfoRequest?), int operationIndex = 0);
        /// <summary>
        /// KKB GIB Sorgulama
        /// </summary>
        /// <remarks>
        /// KKB GIB Sorgulama
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="kKBGIBKunyeInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>KKBGIBKunyeResponse</returns>
        KKBGIBKunyeResponse ApiV1ChequeBpmKKBGIBKunyeInfoPost(KKBGIBKunyeInfoRequest? kKBGIBKunyeInfoRequest = default(KKBGIBKunyeInfoRequest?), int operationIndex = 0);

        /// <summary>
        /// KKB GIB Sorgulama
        /// </summary>
        /// <remarks>
        /// KKB GIB Sorgulama
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="kKBGIBKunyeInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of KKBGIBKunyeResponse</returns>
        ApiResponse<KKBGIBKunyeResponse> ApiV1ChequeBpmKKBGIBKunyeInfoPostWithHttpInfo(KKBGIBKunyeInfoRequest? kKBGIBKunyeInfoRequest = default(KKBGIBKunyeInfoRequest?), int operationIndex = 0);
        /// <summary>
        /// KKB Risk Raporu
        /// </summary>
        /// <remarks>
        /// KKB Risk Raporu
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="kKBRiskRaporuRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>KKBRiskRaporuResponse</returns>
        KKBRiskRaporuResponse ApiV1ChequeBpmKKBRiskRaporuPost(KKBRiskRaporuRequest? kKBRiskRaporuRequest = default(KKBRiskRaporuRequest?), int operationIndex = 0);

        /// <summary>
        /// KKB Risk Raporu
        /// </summary>
        /// <remarks>
        /// KKB Risk Raporu
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="kKBRiskRaporuRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of KKBRiskRaporuResponse</returns>
        ApiResponse<KKBRiskRaporuResponse> ApiV1ChequeBpmKKBRiskRaporuPostWithHttpInfo(KKBRiskRaporuRequest? kKBRiskRaporuRequest = default(KKBRiskRaporuRequest?), int operationIndex = 0);
        /// <summary>
        /// KKB Protestolu Senet
        /// </summary>
        /// <remarks>
        /// KKB Protestolu Senet
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="kKBSenetInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>SenetDetayListesiResponse</returns>
        SenetDetayListesiResponse ApiV1ChequeBpmKKBSenetInfoPost(KKBSenetInfoRequest? kKBSenetInfoRequest = default(KKBSenetInfoRequest?), int operationIndex = 0);

        /// <summary>
        /// KKB Protestolu Senet
        /// </summary>
        /// <remarks>
        /// KKB Protestolu Senet
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="kKBSenetInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of SenetDetayListesiResponse</returns>
        ApiResponse<SenetDetayListesiResponse> ApiV1ChequeBpmKKBSenetInfoPostWithHttpInfo(KKBSenetInfoRequest? kKBSenetInfoRequest = default(KKBSenetInfoRequest?), int operationIndex = 0);
        /// <summary>
        /// Firma Bazında Memzuç Detay Bilgileri
        /// </summary>
        /// <remarks>
        /// Firma Bazında Memzuç Detay Bilgileri
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="memzucInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>MemzucEntResponse</returns>
        MemzucEntResponse ApiV1ChequeBpmMemzucInfoPost(MemzucInfoRequest? memzucInfoRequest = default(MemzucInfoRequest?), int operationIndex = 0);

        /// <summary>
        /// Firma Bazında Memzuç Detay Bilgileri
        /// </summary>
        /// <remarks>
        /// Firma Bazında Memzuç Detay Bilgileri
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="memzucInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of MemzucEntResponse</returns>
        ApiResponse<MemzucEntResponse> ApiV1ChequeBpmMemzucInfoPostWithHttpInfo(MemzucInfoRequest? memzucInfoRequest = default(MemzucInfoRequest?), int operationIndex = 0);
        /// <summary>
        /// Negatif Listede yeralan Olumsuzluklar
        /// </summary>
        /// <remarks>
        /// Negatif Listede yeralan Olumsuzluklar
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="negativenessInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>NegativnessResponse</returns>
        NegativnessResponse ApiV1ChequeBpmNegativenessInfoPost(NegativenessInfoRequest? negativenessInfoRequest = default(NegativenessInfoRequest?), int operationIndex = 0);

        /// <summary>
        /// Negatif Listede yeralan Olumsuzluklar
        /// </summary>
        /// <remarks>
        /// Negatif Listede yeralan Olumsuzluklar
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="negativenessInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of NegativnessResponse</returns>
        ApiResponse<NegativnessResponse> ApiV1ChequeBpmNegativenessInfoPostWithHttpInfo(NegativenessInfoRequest? negativenessInfoRequest = default(NegativenessInfoRequest?), int operationIndex = 0);
        /// <summary>
        /// Protestolu Senet Bilgileri
        /// </summary>
        /// <remarks>
        /// Protestolu Senet Bilgileri
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="protestedBillInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ProtestoluSenetBilgisiResponse</returns>
        ProtestoluSenetBilgisiResponse ApiV1ChequeBpmProtestedBillInfoPost(ProtestedBillInfoRequest? protestedBillInfoRequest = default(ProtestedBillInfoRequest?), int operationIndex = 0);

        /// <summary>
        /// Protestolu Senet Bilgileri
        /// </summary>
        /// <remarks>
        /// Protestolu Senet Bilgileri
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="protestedBillInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ProtestoluSenetBilgisiResponse</returns>
        ApiResponse<ProtestoluSenetBilgisiResponse> ApiV1ChequeBpmProtestedBillInfoPostWithHttpInfo(ProtestedBillInfoRequest? protestedBillInfoRequest = default(ProtestedBillInfoRequest?), int operationIndex = 0);
        /// <summary>
        /// Pusula Tüzel Kontak Müşteri
        /// </summary>
        /// <remarks>
        /// Pusula Tüzel Kontak Müşteri
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="saveCustomerRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>SaveKontakResponse</returns>
        SaveKontakResponse ApiV1ChequeBpmSaveCustomerPost(SaveCustomerRequest? saveCustomerRequest = default(SaveCustomerRequest?), int operationIndex = 0);

        /// <summary>
        /// Pusula Tüzel Kontak Müşteri
        /// </summary>
        /// <remarks>
        /// Pusula Tüzel Kontak Müşteri
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="saveCustomerRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of SaveKontakResponse</returns>
        ApiResponse<SaveKontakResponse> ApiV1ChequeBpmSaveCustomerPostWithHttpInfo(SaveCustomerRequest? saveCustomerRequest = default(SaveCustomerRequest?), int operationIndex = 0);
        /// <summary>
        /// İstihbarat Özet Bilgi
        /// </summary>
        /// <remarks>
        /// İstihbarat Özet Bilgi(Adet1 vs year(now)-6 dır. Yani 2022Adet değeri Adet1 de 2021Adet değeri Adet 2 şeklindedir.)
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tcmbRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>TCMBResponse</returns>
        TCMBResponse ApiV1ChequeBpmTCMBInfoPost(TcmbRequest? tcmbRequest = default(TcmbRequest?), int operationIndex = 0);

        /// <summary>
        /// İstihbarat Özet Bilgi
        /// </summary>
        /// <remarks>
        /// İstihbarat Özet Bilgi(Adet1 vs year(now)-6 dır. Yani 2022Adet değeri Adet1 de 2021Adet değeri Adet 2 şeklindedir.)
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tcmbRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of TCMBResponse</returns>
        ApiResponse<TCMBResponse> ApiV1ChequeBpmTCMBInfoPostWithHttpInfo(TcmbRequest? tcmbRequest = default(TcmbRequest?), int operationIndex = 0);
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IChequeBpmApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// Keşidecinin Bankamızdaki son 2 yıldaki çek tahsil performansı
        /// </summary>
        /// <remarks>
        /// Keşidecinin Bankamızdaki son 2 yıldaki çek tahsil performansı
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="chequeCollectPerformanceRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ChequePerformanceResponse</returns>
        System.Threading.Tasks.Task<ChequePerformanceResponse> ApiV1ChequeBpmChequeCollectPerformancePostAsync(ChequeCollectPerformanceRequest? chequeCollectPerformanceRequest = default(ChequeCollectPerformanceRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Keşidecinin Bankamızdaki son 2 yıldaki çek tahsil performansı
        /// </summary>
        /// <remarks>
        /// Keşidecinin Bankamızdaki son 2 yıldaki çek tahsil performansı
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="chequeCollectPerformanceRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ChequePerformanceResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<ChequePerformanceResponse>> ApiV1ChequeBpmChequeCollectPerformancePostWithHttpInfoAsync(ChequeCollectPerformanceRequest? chequeCollectPerformanceRequest = default(ChequeCollectPerformanceRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Karşılıksız Çek Bilgisi
        /// </summary>
        /// <remarks>
        /// Karşılıksız Çek Bilgisi
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="chequeIntelligenceInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ChequeIntResponse</returns>
        System.Threading.Tasks.Task<ChequeIntResponse> ApiV1ChequeBpmChequeIntelligenceInfoPostAsync(ChequeIntelligenceInfoRequest? chequeIntelligenceInfoRequest = default(ChequeIntelligenceInfoRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Karşılıksız Çek Bilgisi
        /// </summary>
        /// <remarks>
        /// Karşılıksız Çek Bilgisi
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="chequeIntelligenceInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ChequeIntResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<ChequeIntResponse>> ApiV1ChequeBpmChequeIntelligenceInfoPostWithHttpInfoAsync(ChequeIntelligenceInfoRequest? chequeIntelligenceInfoRequest = default(ChequeIntelligenceInfoRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Kurumsal KKB İlişkileri
        /// </summary>
        /// <remarks>
        /// Kurumsal KKB İlişkileri
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="corporateKKBRelationRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of RelationResponse</returns>
        System.Threading.Tasks.Task<RelationResponse> ApiV1ChequeBpmCorporateKKBRelationPostAsync(CorporateKKBRelationRequest? corporateKKBRelationRequest = default(CorporateKKBRelationRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Kurumsal KKB İlişkileri
        /// </summary>
        /// <remarks>
        /// Kurumsal KKB İlişkileri
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="corporateKKBRelationRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (RelationResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<RelationResponse>> ApiV1ChequeBpmCorporateKKBRelationPostWithHttpInfoAsync(CorporateKKBRelationRequest? corporateKKBRelationRequest = default(CorporateKKBRelationRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Kurumsal KKB Sorgulama
        /// </summary>
        /// <remarks>
        /// Kurumsal KKB Sorgulama
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="corporateKKBSummaryRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of KKBResponse</returns>
        System.Threading.Tasks.Task<KKBResponse> ApiV1ChequeBpmCorporateKKBSummaryPostAsync(CorporateKKBSummaryRequest? corporateKKBSummaryRequest = default(CorporateKKBSummaryRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Kurumsal KKB Sorgulama
        /// </summary>
        /// <remarks>
        /// Kurumsal KKB Sorgulama
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="corporateKKBSummaryRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (KKBResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<KKBResponse>> ApiV1ChequeBpmCorporateKKBSummaryPostWithHttpInfoAsync(CorporateKKBSummaryRequest? corporateKKBSummaryRequest = default(CorporateKKBSummaryRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Müşteri Limit Risk
        /// </summary>
        /// <remarks>
        /// Müşteri Limit Risk
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="customerGroupLimitRiskRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of LimitRiskResponse</returns>
        System.Threading.Tasks.Task<LimitRiskResponse> ApiV1ChequeBpmCustomerGroupLimitRiskPostAsync(CustomerGroupLimitRiskRequest? customerGroupLimitRiskRequest = default(CustomerGroupLimitRiskRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Müşteri Limit Risk
        /// </summary>
        /// <remarks>
        /// Müşteri Limit Risk
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="customerGroupLimitRiskRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (LimitRiskResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<LimitRiskResponse>> ApiV1ChequeBpmCustomerGroupLimitRiskPostWithHttpInfoAsync(CustomerGroupLimitRiskRequest? customerGroupLimitRiskRequest = default(CustomerGroupLimitRiskRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Bankamız İlişkiler
        /// </summary>
        /// <remarks>
        /// Bankamız İlişkiler
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="customerRelationRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of CustomerRelResponse</returns>
        System.Threading.Tasks.Task<CustomerRelResponse> ApiV1ChequeBpmCustomerRelationPostAsync(CustomerRelationRequest? customerRelationRequest = default(CustomerRelationRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Bankamız İlişkiler
        /// </summary>
        /// <remarks>
        /// Bankamız İlişkiler
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="customerRelationRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (CustomerRelResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<CustomerRelResponse>> ApiV1ChequeBpmCustomerRelationPostWithHttpInfoAsync(CustomerRelationRequest? customerRelationRequest = default(CustomerRelationRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// E-haciz sorgulaması
        /// </summary>
        /// <remarks>
        /// E-haciz sorgulaması
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="eAttachmentInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of HacizResponse</returns>
        System.Threading.Tasks.Task<HacizResponse> ApiV1ChequeBpmEAttachmentInfoPostAsync(EAttachmentInfoRequest? eAttachmentInfoRequest = default(EAttachmentInfoRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// E-haciz sorgulaması
        /// </summary>
        /// <remarks>
        /// E-haciz sorgulaması
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="eAttachmentInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (HacizResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<HacizResponse>> ApiV1ChequeBpmEAttachmentInfoPostWithHttpInfoAsync(EAttachmentInfoRequest? eAttachmentInfoRequest = default(EAttachmentInfoRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Bankamız Erken Uyarı Bilgileri Servisi
        /// </summary>
        /// <remarks>
        /// Bankamız Erken Uyarı Bilgileri Servisi
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="earlyWarningInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of EWResponse</returns>
        System.Threading.Tasks.Task<EWResponse> ApiV1ChequeBpmEarlyWarningInfoPostAsync(EarlyWarningInfoRequest? earlyWarningInfoRequest = default(EarlyWarningInfoRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Bankamız Erken Uyarı Bilgileri Servisi
        /// </summary>
        /// <remarks>
        /// Bankamız Erken Uyarı Bilgileri Servisi
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="earlyWarningInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (EWResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<EWResponse>> ApiV1ChequeBpmEarlyWarningInfoPostWithHttpInfoAsync(EarlyWarningInfoRequest? earlyWarningInfoRequest = default(EarlyWarningInfoRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Teminat Depomuzdaki Çekler
        /// </summary>
        /// <remarks>
        /// Teminat Depomuzdaki Çekler
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="existingChequeInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ExistingChequeResponse</returns>
        System.Threading.Tasks.Task<ExistingChequeResponse> ApiV1ChequeBpmExistingChequeInfoPostAsync(ExistingChequeInfoRequest? existingChequeInfoRequest = default(ExistingChequeInfoRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Teminat Depomuzdaki Çekler
        /// </summary>
        /// <remarks>
        /// Teminat Depomuzdaki Çekler
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="existingChequeInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ExistingChequeResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<ExistingChequeResponse>> ApiV1ChequeBpmExistingChequeInfoPostWithHttpInfoAsync(ExistingChequeInfoRequest? existingChequeInfoRequest = default(ExistingChequeInfoRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Çek Bilgisi Banka Veritabanına yazılması
        /// </summary>
        /// <remarks>
        /// Çek Bilgisi Banka Veritabanına yazılması
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="bpmLogRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of BPMLogResponse</returns>
        System.Threading.Tasks.Task<BPMLogResponse> ApiV1ChequeBpmGetChequeLogPostAsync(BpmLogRequest? bpmLogRequest = default(BpmLogRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Çek Bilgisi Banka Veritabanına yazılması
        /// </summary>
        /// <remarks>
        /// Çek Bilgisi Banka Veritabanına yazılması
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="bpmLogRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (BPMLogResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<BPMLogResponse>> ApiV1ChequeBpmGetChequeLogPostWithHttpInfoAsync(BpmLogRequest? bpmLogRequest = default(BpmLogRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Firma Alıcı Limit
        /// </summary>
        /// <remarks>
        /// Firma Alıcı Limit
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="factoringBuyerLimitRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of BuyerLimitResponse</returns>
        System.Threading.Tasks.Task<BuyerLimitResponse> ApiV1ChequeBpmGetFactoringBuyerLimitPostAsync(FactoringBuyerLimitRequest? factoringBuyerLimitRequest = default(FactoringBuyerLimitRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Firma Alıcı Limit
        /// </summary>
        /// <remarks>
        /// Firma Alıcı Limit
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="factoringBuyerLimitRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (BuyerLimitResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<BuyerLimitResponse>> ApiV1ChequeBpmGetFactoringBuyerLimitPostWithHttpInfoAsync(FactoringBuyerLimitRequest? factoringBuyerLimitRequest = default(FactoringBuyerLimitRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Klrte Servisi
        /// </summary>
        /// <remarks>
        /// Klrte Servisi
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="klrteServisRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of KlrteServisResponse</returns>
        System.Threading.Tasks.Task<KlrteServisResponse> ApiV1ChequeBpmGetKlrtePostAsync(KlrteServisRequest? klrteServisRequest = default(KlrteServisRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Klrte Servisi
        /// </summary>
        /// <remarks>
        /// Klrte Servisi
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="klrteServisRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (KlrteServisResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<KlrteServisResponse>> ApiV1ChequeBpmGetKlrtePostWithHttpInfoAsync(KlrteServisRequest? klrteServisRequest = default(KlrteServisRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Kur Bilgisi
        /// </summary>
        /// <remarks>
        /// Kur Bilgisi
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dovizCinsi"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of double</returns>
        System.Threading.Tasks.Task<double> ApiV1ChequeBpmGetRateGetAsync(string? dovizCinsi = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Kur Bilgisi
        /// </summary>
        /// <remarks>
        /// Kur Bilgisi
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dovizCinsi"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (double)</returns>
        System.Threading.Tasks.Task<ApiResponse<double>> ApiV1ChequeBpmGetRateGetWithHttpInfoAsync(string? dovizCinsi = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// İcra Detay Bilgileri
        /// </summary>
        /// <remarks>
        /// İcra Detay Bilgileri
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="icraInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of IcraResponse</returns>
        System.Threading.Tasks.Task<IcraResponse> ApiV1ChequeBpmIcraInfoPostAsync(IcraInfoRequest? icraInfoRequest = default(IcraInfoRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// İcra Detay Bilgileri
        /// </summary>
        /// <remarks>
        /// İcra Detay Bilgileri
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="icraInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (IcraResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<IcraResponse>> ApiV1ChequeBpmIcraInfoPostWithHttpInfoAsync(IcraInfoRequest? icraInfoRequest = default(IcraInfoRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// İhale Yasaklılık
        /// </summary>
        /// <remarks>
        /// İhale Yasaklılık
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="ihaleYasaklilikInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of IhaleYAsaklilikResponse</returns>
        System.Threading.Tasks.Task<IhaleYAsaklilikResponse> ApiV1ChequeBpmIhaleYasaklilikInfoPostAsync(IhaleYasaklilikInfoRequest? ihaleYasaklilikInfoRequest = default(IhaleYasaklilikInfoRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// İhale Yasaklılık
        /// </summary>
        /// <remarks>
        /// İhale Yasaklılık
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="ihaleYasaklilikInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (IhaleYAsaklilikResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<IhaleYAsaklilikResponse>> ApiV1ChequeBpmIhaleYasaklilikInfoPostWithHttpInfoAsync(IhaleYasaklilikInfoRequest? ihaleYasaklilikInfoRequest = default(IhaleYasaklilikInfoRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Bireysel KKB Sorgulama
        /// </summary>
        /// <remarks>
        /// Bireysel KKB Sorgulama
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="individualKKBSummaryRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of KKBSummaryResponse</returns>
        System.Threading.Tasks.Task<KKBSummaryResponse> ApiV1ChequeBpmIndividualKKBSummaryPostAsync(IndividualKKBSummaryRequest? individualKKBSummaryRequest = default(IndividualKKBSummaryRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Bireysel KKB Sorgulama
        /// </summary>
        /// <remarks>
        /// Bireysel KKB Sorgulama
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="individualKKBSummaryRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (KKBSummaryResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<KKBSummaryResponse>> ApiV1ChequeBpmIndividualKKBSummaryPostWithHttpInfoAsync(IndividualKKBSummaryRequest? individualKKBSummaryRequest = default(IndividualKKBSummaryRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// KKB Çek Raporu
        /// </summary>
        /// <remarks>
        /// KKB Çek Raporu
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="kKBChequeInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of KKBChequeResponse</returns>
        System.Threading.Tasks.Task<KKBChequeResponse> ApiV1ChequeBpmKKBChequeInfoPostAsync(KKBChequeInfoRequest? kKBChequeInfoRequest = default(KKBChequeInfoRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// KKB Çek Raporu
        /// </summary>
        /// <remarks>
        /// KKB Çek Raporu
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="kKBChequeInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (KKBChequeResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<KKBChequeResponse>> ApiV1ChequeBpmKKBChequeInfoPostWithHttpInfoAsync(KKBChequeInfoRequest? kKBChequeInfoRequest = default(KKBChequeInfoRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// KKB Çek Durum Sorgulama
        /// </summary>
        /// <remarks>
        /// KKB Çek Durum Sorgulama
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="kKBChequeStatusRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ChequeStatusResponse</returns>
        System.Threading.Tasks.Task<ChequeStatusResponse> ApiV1ChequeBpmKKBChequeStatusPostAsync(KKBChequeStatusRequest? kKBChequeStatusRequest = default(KKBChequeStatusRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// KKB Çek Durum Sorgulama
        /// </summary>
        /// <remarks>
        /// KKB Çek Durum Sorgulama
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="kKBChequeStatusRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ChequeStatusResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<ChequeStatusResponse>> ApiV1ChequeBpmKKBChequeStatusPostWithHttpInfoAsync(KKBChequeStatusRequest? kKBChequeStatusRequest = default(KKBChequeStatusRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// KKB Çapraz Çek Sorgulama
        /// </summary>
        /// <remarks>
        /// KKB Çapraz Çek Sorgulama
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="kKBCrossChequeInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of CaprazCekIliskileriSorguResponse</returns>
        System.Threading.Tasks.Task<CaprazCekIliskileriSorguResponse> ApiV1ChequeBpmKKBCrossChequeInfoPostAsync(KKBCrossChequeInfoRequest? kKBCrossChequeInfoRequest = default(KKBCrossChequeInfoRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// KKB Çapraz Çek Sorgulama
        /// </summary>
        /// <remarks>
        /// KKB Çapraz Çek Sorgulama
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="kKBCrossChequeInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (CaprazCekIliskileriSorguResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<CaprazCekIliskileriSorguResponse>> ApiV1ChequeBpmKKBCrossChequeInfoPostWithHttpInfoAsync(KKBCrossChequeInfoRequest? kKBCrossChequeInfoRequest = default(KKBCrossChequeInfoRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// KKB GIB Sorgulama
        /// </summary>
        /// <remarks>
        /// KKB GIB Sorgulama
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="kKBGIBKunyeInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of KKBGIBKunyeResponse</returns>
        System.Threading.Tasks.Task<KKBGIBKunyeResponse> ApiV1ChequeBpmKKBGIBKunyeInfoPostAsync(KKBGIBKunyeInfoRequest? kKBGIBKunyeInfoRequest = default(KKBGIBKunyeInfoRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// KKB GIB Sorgulama
        /// </summary>
        /// <remarks>
        /// KKB GIB Sorgulama
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="kKBGIBKunyeInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (KKBGIBKunyeResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<KKBGIBKunyeResponse>> ApiV1ChequeBpmKKBGIBKunyeInfoPostWithHttpInfoAsync(KKBGIBKunyeInfoRequest? kKBGIBKunyeInfoRequest = default(KKBGIBKunyeInfoRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// KKB Risk Raporu
        /// </summary>
        /// <remarks>
        /// KKB Risk Raporu
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="kKBRiskRaporuRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of KKBRiskRaporuResponse</returns>
        System.Threading.Tasks.Task<KKBRiskRaporuResponse> ApiV1ChequeBpmKKBRiskRaporuPostAsync(KKBRiskRaporuRequest? kKBRiskRaporuRequest = default(KKBRiskRaporuRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// KKB Risk Raporu
        /// </summary>
        /// <remarks>
        /// KKB Risk Raporu
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="kKBRiskRaporuRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (KKBRiskRaporuResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<KKBRiskRaporuResponse>> ApiV1ChequeBpmKKBRiskRaporuPostWithHttpInfoAsync(KKBRiskRaporuRequest? kKBRiskRaporuRequest = default(KKBRiskRaporuRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// KKB Protestolu Senet
        /// </summary>
        /// <remarks>
        /// KKB Protestolu Senet
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="kKBSenetInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of SenetDetayListesiResponse</returns>
        System.Threading.Tasks.Task<SenetDetayListesiResponse> ApiV1ChequeBpmKKBSenetInfoPostAsync(KKBSenetInfoRequest? kKBSenetInfoRequest = default(KKBSenetInfoRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// KKB Protestolu Senet
        /// </summary>
        /// <remarks>
        /// KKB Protestolu Senet
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="kKBSenetInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (SenetDetayListesiResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<SenetDetayListesiResponse>> ApiV1ChequeBpmKKBSenetInfoPostWithHttpInfoAsync(KKBSenetInfoRequest? kKBSenetInfoRequest = default(KKBSenetInfoRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Firma Bazında Memzuç Detay Bilgileri
        /// </summary>
        /// <remarks>
        /// Firma Bazında Memzuç Detay Bilgileri
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="memzucInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of MemzucEntResponse</returns>
        System.Threading.Tasks.Task<MemzucEntResponse> ApiV1ChequeBpmMemzucInfoPostAsync(MemzucInfoRequest? memzucInfoRequest = default(MemzucInfoRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Firma Bazında Memzuç Detay Bilgileri
        /// </summary>
        /// <remarks>
        /// Firma Bazında Memzuç Detay Bilgileri
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="memzucInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (MemzucEntResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<MemzucEntResponse>> ApiV1ChequeBpmMemzucInfoPostWithHttpInfoAsync(MemzucInfoRequest? memzucInfoRequest = default(MemzucInfoRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Negatif Listede yeralan Olumsuzluklar
        /// </summary>
        /// <remarks>
        /// Negatif Listede yeralan Olumsuzluklar
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="negativenessInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of NegativnessResponse</returns>
        System.Threading.Tasks.Task<NegativnessResponse> ApiV1ChequeBpmNegativenessInfoPostAsync(NegativenessInfoRequest? negativenessInfoRequest = default(NegativenessInfoRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Negatif Listede yeralan Olumsuzluklar
        /// </summary>
        /// <remarks>
        /// Negatif Listede yeralan Olumsuzluklar
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="negativenessInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (NegativnessResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<NegativnessResponse>> ApiV1ChequeBpmNegativenessInfoPostWithHttpInfoAsync(NegativenessInfoRequest? negativenessInfoRequest = default(NegativenessInfoRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Protestolu Senet Bilgileri
        /// </summary>
        /// <remarks>
        /// Protestolu Senet Bilgileri
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="protestedBillInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ProtestoluSenetBilgisiResponse</returns>
        System.Threading.Tasks.Task<ProtestoluSenetBilgisiResponse> ApiV1ChequeBpmProtestedBillInfoPostAsync(ProtestedBillInfoRequest? protestedBillInfoRequest = default(ProtestedBillInfoRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Protestolu Senet Bilgileri
        /// </summary>
        /// <remarks>
        /// Protestolu Senet Bilgileri
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="protestedBillInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ProtestoluSenetBilgisiResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<ProtestoluSenetBilgisiResponse>> ApiV1ChequeBpmProtestedBillInfoPostWithHttpInfoAsync(ProtestedBillInfoRequest? protestedBillInfoRequest = default(ProtestedBillInfoRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Pusula Tüzel Kontak Müşteri
        /// </summary>
        /// <remarks>
        /// Pusula Tüzel Kontak Müşteri
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="saveCustomerRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of SaveKontakResponse</returns>
        System.Threading.Tasks.Task<SaveKontakResponse> ApiV1ChequeBpmSaveCustomerPostAsync(SaveCustomerRequest? saveCustomerRequest = default(SaveCustomerRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Pusula Tüzel Kontak Müşteri
        /// </summary>
        /// <remarks>
        /// Pusula Tüzel Kontak Müşteri
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="saveCustomerRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (SaveKontakResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<SaveKontakResponse>> ApiV1ChequeBpmSaveCustomerPostWithHttpInfoAsync(SaveCustomerRequest? saveCustomerRequest = default(SaveCustomerRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// İstihbarat Özet Bilgi
        /// </summary>
        /// <remarks>
        /// İstihbarat Özet Bilgi(Adet1 vs year(now)-6 dır. Yani 2022Adet değeri Adet1 de 2021Adet değeri Adet 2 şeklindedir.)
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tcmbRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of TCMBResponse</returns>
        System.Threading.Tasks.Task<TCMBResponse> ApiV1ChequeBpmTCMBInfoPostAsync(TcmbRequest? tcmbRequest = default(TcmbRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// İstihbarat Özet Bilgi
        /// </summary>
        /// <remarks>
        /// İstihbarat Özet Bilgi(Adet1 vs year(now)-6 dır. Yani 2022Adet değeri Adet1 de 2021Adet değeri Adet 2 şeklindedir.)
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tcmbRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (TCMBResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<TCMBResponse>> ApiV1ChequeBpmTCMBInfoPostWithHttpInfoAsync(TcmbRequest? tcmbRequest = default(TcmbRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IChequeBpmApi : IChequeBpmApiSync, IChequeBpmApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class ChequeBpmApi : IChequeBpmApi
    {
        private Org.OpenAPITools.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="ChequeBpmApi"/> class.
        /// </summary>
        /// <returns></returns>
        public ChequeBpmApi() : this((string)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ChequeBpmApi"/> class.
        /// </summary>
        /// <returns></returns>
        public ChequeBpmApi(string basePath)
        {
            this.Configuration = Org.OpenAPITools.Client.Configuration.MergeConfigurations(
                Org.OpenAPITools.Client.GlobalConfiguration.Instance,
                new Org.OpenAPITools.Client.Configuration { BasePath = basePath }
            );
            this.Client = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ChequeBpmApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public ChequeBpmApi(Org.OpenAPITools.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = Org.OpenAPITools.Client.Configuration.MergeConfigurations(
                Org.OpenAPITools.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ChequeBpmApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public ChequeBpmApi(Org.OpenAPITools.Client.ISynchronousClient client, Org.OpenAPITools.Client.IAsynchronousClient asyncClient, Org.OpenAPITools.Client.IReadableConfiguration configuration)
        {
            if (client == null) throw new ArgumentNullException("client");
            if (asyncClient == null) throw new ArgumentNullException("asyncClient");
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public Org.OpenAPITools.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public Org.OpenAPITools.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public string GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public Org.OpenAPITools.Client.IReadableConfiguration Configuration { get; set; }

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public Org.OpenAPITools.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Keşidecinin Bankamızdaki son 2 yıldaki çek tahsil performansı Keşidecinin Bankamızdaki son 2 yıldaki çek tahsil performansı
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="chequeCollectPerformanceRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ChequePerformanceResponse</returns>
        public ChequePerformanceResponse ApiV1ChequeBpmChequeCollectPerformancePost(ChequeCollectPerformanceRequest? chequeCollectPerformanceRequest = default(ChequeCollectPerformanceRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ChequePerformanceResponse> localVarResponse = ApiV1ChequeBpmChequeCollectPerformancePostWithHttpInfo(chequeCollectPerformanceRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Keşidecinin Bankamızdaki son 2 yıldaki çek tahsil performansı Keşidecinin Bankamızdaki son 2 yıldaki çek tahsil performansı
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="chequeCollectPerformanceRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ChequePerformanceResponse</returns>
        public Org.OpenAPITools.Client.ApiResponse<ChequePerformanceResponse> ApiV1ChequeBpmChequeCollectPerformancePostWithHttpInfo(ChequeCollectPerformanceRequest? chequeCollectPerformanceRequest = default(ChequeCollectPerformanceRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = chequeCollectPerformanceRequest;

            localVarRequestOptions.Operation = "ChequeBpmApi.ApiV1ChequeBpmChequeCollectPerformancePost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Post<ChequePerformanceResponse>("/api/v1/ChequeBpm/ChequeCollectPerformance", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ChequeBpmChequeCollectPerformancePost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Keşidecinin Bankamızdaki son 2 yıldaki çek tahsil performansı Keşidecinin Bankamızdaki son 2 yıldaki çek tahsil performansı
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="chequeCollectPerformanceRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ChequePerformanceResponse</returns>
        public async System.Threading.Tasks.Task<ChequePerformanceResponse> ApiV1ChequeBpmChequeCollectPerformancePostAsync(ChequeCollectPerformanceRequest? chequeCollectPerformanceRequest = default(ChequeCollectPerformanceRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<ChequePerformanceResponse> localVarResponse = await ApiV1ChequeBpmChequeCollectPerformancePostWithHttpInfoAsync(chequeCollectPerformanceRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Keşidecinin Bankamızdaki son 2 yıldaki çek tahsil performansı Keşidecinin Bankamızdaki son 2 yıldaki çek tahsil performansı
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="chequeCollectPerformanceRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ChequePerformanceResponse)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ChequePerformanceResponse>> ApiV1ChequeBpmChequeCollectPerformancePostWithHttpInfoAsync(ChequeCollectPerformanceRequest? chequeCollectPerformanceRequest = default(ChequeCollectPerformanceRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = chequeCollectPerformanceRequest;

            localVarRequestOptions.Operation = "ChequeBpmApi.ApiV1ChequeBpmChequeCollectPerformancePost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<ChequePerformanceResponse>("/api/v1/ChequeBpm/ChequeCollectPerformance", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ChequeBpmChequeCollectPerformancePost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Karşılıksız Çek Bilgisi Karşılıksız Çek Bilgisi
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="chequeIntelligenceInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ChequeIntResponse</returns>
        public ChequeIntResponse ApiV1ChequeBpmChequeIntelligenceInfoPost(ChequeIntelligenceInfoRequest? chequeIntelligenceInfoRequest = default(ChequeIntelligenceInfoRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ChequeIntResponse> localVarResponse = ApiV1ChequeBpmChequeIntelligenceInfoPostWithHttpInfo(chequeIntelligenceInfoRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Karşılıksız Çek Bilgisi Karşılıksız Çek Bilgisi
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="chequeIntelligenceInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ChequeIntResponse</returns>
        public Org.OpenAPITools.Client.ApiResponse<ChequeIntResponse> ApiV1ChequeBpmChequeIntelligenceInfoPostWithHttpInfo(ChequeIntelligenceInfoRequest? chequeIntelligenceInfoRequest = default(ChequeIntelligenceInfoRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = chequeIntelligenceInfoRequest;

            localVarRequestOptions.Operation = "ChequeBpmApi.ApiV1ChequeBpmChequeIntelligenceInfoPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Post<ChequeIntResponse>("/api/v1/ChequeBpm/ChequeIntelligenceInfo", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ChequeBpmChequeIntelligenceInfoPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Karşılıksız Çek Bilgisi Karşılıksız Çek Bilgisi
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="chequeIntelligenceInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ChequeIntResponse</returns>
        public async System.Threading.Tasks.Task<ChequeIntResponse> ApiV1ChequeBpmChequeIntelligenceInfoPostAsync(ChequeIntelligenceInfoRequest? chequeIntelligenceInfoRequest = default(ChequeIntelligenceInfoRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<ChequeIntResponse> localVarResponse = await ApiV1ChequeBpmChequeIntelligenceInfoPostWithHttpInfoAsync(chequeIntelligenceInfoRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Karşılıksız Çek Bilgisi Karşılıksız Çek Bilgisi
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="chequeIntelligenceInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ChequeIntResponse)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ChequeIntResponse>> ApiV1ChequeBpmChequeIntelligenceInfoPostWithHttpInfoAsync(ChequeIntelligenceInfoRequest? chequeIntelligenceInfoRequest = default(ChequeIntelligenceInfoRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = chequeIntelligenceInfoRequest;

            localVarRequestOptions.Operation = "ChequeBpmApi.ApiV1ChequeBpmChequeIntelligenceInfoPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<ChequeIntResponse>("/api/v1/ChequeBpm/ChequeIntelligenceInfo", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ChequeBpmChequeIntelligenceInfoPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Kurumsal KKB İlişkileri Kurumsal KKB İlişkileri
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="corporateKKBRelationRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>RelationResponse</returns>
        public RelationResponse ApiV1ChequeBpmCorporateKKBRelationPost(CorporateKKBRelationRequest? corporateKKBRelationRequest = default(CorporateKKBRelationRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<RelationResponse> localVarResponse = ApiV1ChequeBpmCorporateKKBRelationPostWithHttpInfo(corporateKKBRelationRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Kurumsal KKB İlişkileri Kurumsal KKB İlişkileri
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="corporateKKBRelationRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of RelationResponse</returns>
        public Org.OpenAPITools.Client.ApiResponse<RelationResponse> ApiV1ChequeBpmCorporateKKBRelationPostWithHttpInfo(CorporateKKBRelationRequest? corporateKKBRelationRequest = default(CorporateKKBRelationRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = corporateKKBRelationRequest;

            localVarRequestOptions.Operation = "ChequeBpmApi.ApiV1ChequeBpmCorporateKKBRelationPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Post<RelationResponse>("/api/v1/ChequeBpm/CorporateKKBRelation", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ChequeBpmCorporateKKBRelationPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Kurumsal KKB İlişkileri Kurumsal KKB İlişkileri
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="corporateKKBRelationRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of RelationResponse</returns>
        public async System.Threading.Tasks.Task<RelationResponse> ApiV1ChequeBpmCorporateKKBRelationPostAsync(CorporateKKBRelationRequest? corporateKKBRelationRequest = default(CorporateKKBRelationRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<RelationResponse> localVarResponse = await ApiV1ChequeBpmCorporateKKBRelationPostWithHttpInfoAsync(corporateKKBRelationRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Kurumsal KKB İlişkileri Kurumsal KKB İlişkileri
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="corporateKKBRelationRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (RelationResponse)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<RelationResponse>> ApiV1ChequeBpmCorporateKKBRelationPostWithHttpInfoAsync(CorporateKKBRelationRequest? corporateKKBRelationRequest = default(CorporateKKBRelationRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = corporateKKBRelationRequest;

            localVarRequestOptions.Operation = "ChequeBpmApi.ApiV1ChequeBpmCorporateKKBRelationPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<RelationResponse>("/api/v1/ChequeBpm/CorporateKKBRelation", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ChequeBpmCorporateKKBRelationPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Kurumsal KKB Sorgulama Kurumsal KKB Sorgulama
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="corporateKKBSummaryRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>KKBResponse</returns>
        public KKBResponse ApiV1ChequeBpmCorporateKKBSummaryPost(CorporateKKBSummaryRequest? corporateKKBSummaryRequest = default(CorporateKKBSummaryRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<KKBResponse> localVarResponse = ApiV1ChequeBpmCorporateKKBSummaryPostWithHttpInfo(corporateKKBSummaryRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Kurumsal KKB Sorgulama Kurumsal KKB Sorgulama
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="corporateKKBSummaryRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of KKBResponse</returns>
        public Org.OpenAPITools.Client.ApiResponse<KKBResponse> ApiV1ChequeBpmCorporateKKBSummaryPostWithHttpInfo(CorporateKKBSummaryRequest? corporateKKBSummaryRequest = default(CorporateKKBSummaryRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = corporateKKBSummaryRequest;

            localVarRequestOptions.Operation = "ChequeBpmApi.ApiV1ChequeBpmCorporateKKBSummaryPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Post<KKBResponse>("/api/v1/ChequeBpm/CorporateKKBSummary", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ChequeBpmCorporateKKBSummaryPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Kurumsal KKB Sorgulama Kurumsal KKB Sorgulama
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="corporateKKBSummaryRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of KKBResponse</returns>
        public async System.Threading.Tasks.Task<KKBResponse> ApiV1ChequeBpmCorporateKKBSummaryPostAsync(CorporateKKBSummaryRequest? corporateKKBSummaryRequest = default(CorporateKKBSummaryRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<KKBResponse> localVarResponse = await ApiV1ChequeBpmCorporateKKBSummaryPostWithHttpInfoAsync(corporateKKBSummaryRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Kurumsal KKB Sorgulama Kurumsal KKB Sorgulama
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="corporateKKBSummaryRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (KKBResponse)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<KKBResponse>> ApiV1ChequeBpmCorporateKKBSummaryPostWithHttpInfoAsync(CorporateKKBSummaryRequest? corporateKKBSummaryRequest = default(CorporateKKBSummaryRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = corporateKKBSummaryRequest;

            localVarRequestOptions.Operation = "ChequeBpmApi.ApiV1ChequeBpmCorporateKKBSummaryPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<KKBResponse>("/api/v1/ChequeBpm/CorporateKKBSummary", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ChequeBpmCorporateKKBSummaryPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Müşteri Limit Risk Müşteri Limit Risk
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="customerGroupLimitRiskRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>LimitRiskResponse</returns>
        public LimitRiskResponse ApiV1ChequeBpmCustomerGroupLimitRiskPost(CustomerGroupLimitRiskRequest? customerGroupLimitRiskRequest = default(CustomerGroupLimitRiskRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<LimitRiskResponse> localVarResponse = ApiV1ChequeBpmCustomerGroupLimitRiskPostWithHttpInfo(customerGroupLimitRiskRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Müşteri Limit Risk Müşteri Limit Risk
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="customerGroupLimitRiskRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of LimitRiskResponse</returns>
        public Org.OpenAPITools.Client.ApiResponse<LimitRiskResponse> ApiV1ChequeBpmCustomerGroupLimitRiskPostWithHttpInfo(CustomerGroupLimitRiskRequest? customerGroupLimitRiskRequest = default(CustomerGroupLimitRiskRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = customerGroupLimitRiskRequest;

            localVarRequestOptions.Operation = "ChequeBpmApi.ApiV1ChequeBpmCustomerGroupLimitRiskPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Post<LimitRiskResponse>("/api/v1/ChequeBpm/CustomerGroupLimitRisk", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ChequeBpmCustomerGroupLimitRiskPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Müşteri Limit Risk Müşteri Limit Risk
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="customerGroupLimitRiskRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of LimitRiskResponse</returns>
        public async System.Threading.Tasks.Task<LimitRiskResponse> ApiV1ChequeBpmCustomerGroupLimitRiskPostAsync(CustomerGroupLimitRiskRequest? customerGroupLimitRiskRequest = default(CustomerGroupLimitRiskRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<LimitRiskResponse> localVarResponse = await ApiV1ChequeBpmCustomerGroupLimitRiskPostWithHttpInfoAsync(customerGroupLimitRiskRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Müşteri Limit Risk Müşteri Limit Risk
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="customerGroupLimitRiskRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (LimitRiskResponse)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<LimitRiskResponse>> ApiV1ChequeBpmCustomerGroupLimitRiskPostWithHttpInfoAsync(CustomerGroupLimitRiskRequest? customerGroupLimitRiskRequest = default(CustomerGroupLimitRiskRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = customerGroupLimitRiskRequest;

            localVarRequestOptions.Operation = "ChequeBpmApi.ApiV1ChequeBpmCustomerGroupLimitRiskPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<LimitRiskResponse>("/api/v1/ChequeBpm/CustomerGroupLimitRisk", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ChequeBpmCustomerGroupLimitRiskPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Bankamız İlişkiler Bankamız İlişkiler
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="customerRelationRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>CustomerRelResponse</returns>
        public CustomerRelResponse ApiV1ChequeBpmCustomerRelationPost(CustomerRelationRequest? customerRelationRequest = default(CustomerRelationRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<CustomerRelResponse> localVarResponse = ApiV1ChequeBpmCustomerRelationPostWithHttpInfo(customerRelationRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Bankamız İlişkiler Bankamız İlişkiler
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="customerRelationRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of CustomerRelResponse</returns>
        public Org.OpenAPITools.Client.ApiResponse<CustomerRelResponse> ApiV1ChequeBpmCustomerRelationPostWithHttpInfo(CustomerRelationRequest? customerRelationRequest = default(CustomerRelationRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = customerRelationRequest;

            localVarRequestOptions.Operation = "ChequeBpmApi.ApiV1ChequeBpmCustomerRelationPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Post<CustomerRelResponse>("/api/v1/ChequeBpm/CustomerRelation", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ChequeBpmCustomerRelationPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Bankamız İlişkiler Bankamız İlişkiler
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="customerRelationRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of CustomerRelResponse</returns>
        public async System.Threading.Tasks.Task<CustomerRelResponse> ApiV1ChequeBpmCustomerRelationPostAsync(CustomerRelationRequest? customerRelationRequest = default(CustomerRelationRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<CustomerRelResponse> localVarResponse = await ApiV1ChequeBpmCustomerRelationPostWithHttpInfoAsync(customerRelationRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Bankamız İlişkiler Bankamız İlişkiler
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="customerRelationRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (CustomerRelResponse)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<CustomerRelResponse>> ApiV1ChequeBpmCustomerRelationPostWithHttpInfoAsync(CustomerRelationRequest? customerRelationRequest = default(CustomerRelationRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = customerRelationRequest;

            localVarRequestOptions.Operation = "ChequeBpmApi.ApiV1ChequeBpmCustomerRelationPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<CustomerRelResponse>("/api/v1/ChequeBpm/CustomerRelation", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ChequeBpmCustomerRelationPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// E-haciz sorgulaması E-haciz sorgulaması
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="eAttachmentInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>HacizResponse</returns>
        public HacizResponse ApiV1ChequeBpmEAttachmentInfoPost(EAttachmentInfoRequest? eAttachmentInfoRequest = default(EAttachmentInfoRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<HacizResponse> localVarResponse = ApiV1ChequeBpmEAttachmentInfoPostWithHttpInfo(eAttachmentInfoRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// E-haciz sorgulaması E-haciz sorgulaması
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="eAttachmentInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of HacizResponse</returns>
        public Org.OpenAPITools.Client.ApiResponse<HacizResponse> ApiV1ChequeBpmEAttachmentInfoPostWithHttpInfo(EAttachmentInfoRequest? eAttachmentInfoRequest = default(EAttachmentInfoRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = eAttachmentInfoRequest;

            localVarRequestOptions.Operation = "ChequeBpmApi.ApiV1ChequeBpmEAttachmentInfoPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Post<HacizResponse>("/api/v1/ChequeBpm/EAttachmentInfo", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ChequeBpmEAttachmentInfoPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// E-haciz sorgulaması E-haciz sorgulaması
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="eAttachmentInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of HacizResponse</returns>
        public async System.Threading.Tasks.Task<HacizResponse> ApiV1ChequeBpmEAttachmentInfoPostAsync(EAttachmentInfoRequest? eAttachmentInfoRequest = default(EAttachmentInfoRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<HacizResponse> localVarResponse = await ApiV1ChequeBpmEAttachmentInfoPostWithHttpInfoAsync(eAttachmentInfoRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// E-haciz sorgulaması E-haciz sorgulaması
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="eAttachmentInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (HacizResponse)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<HacizResponse>> ApiV1ChequeBpmEAttachmentInfoPostWithHttpInfoAsync(EAttachmentInfoRequest? eAttachmentInfoRequest = default(EAttachmentInfoRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = eAttachmentInfoRequest;

            localVarRequestOptions.Operation = "ChequeBpmApi.ApiV1ChequeBpmEAttachmentInfoPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<HacizResponse>("/api/v1/ChequeBpm/EAttachmentInfo", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ChequeBpmEAttachmentInfoPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Bankamız Erken Uyarı Bilgileri Servisi Bankamız Erken Uyarı Bilgileri Servisi
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="earlyWarningInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>EWResponse</returns>
        public EWResponse ApiV1ChequeBpmEarlyWarningInfoPost(EarlyWarningInfoRequest? earlyWarningInfoRequest = default(EarlyWarningInfoRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<EWResponse> localVarResponse = ApiV1ChequeBpmEarlyWarningInfoPostWithHttpInfo(earlyWarningInfoRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Bankamız Erken Uyarı Bilgileri Servisi Bankamız Erken Uyarı Bilgileri Servisi
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="earlyWarningInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of EWResponse</returns>
        public Org.OpenAPITools.Client.ApiResponse<EWResponse> ApiV1ChequeBpmEarlyWarningInfoPostWithHttpInfo(EarlyWarningInfoRequest? earlyWarningInfoRequest = default(EarlyWarningInfoRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = earlyWarningInfoRequest;

            localVarRequestOptions.Operation = "ChequeBpmApi.ApiV1ChequeBpmEarlyWarningInfoPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Post<EWResponse>("/api/v1/ChequeBpm/EarlyWarningInfo", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ChequeBpmEarlyWarningInfoPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Bankamız Erken Uyarı Bilgileri Servisi Bankamız Erken Uyarı Bilgileri Servisi
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="earlyWarningInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of EWResponse</returns>
        public async System.Threading.Tasks.Task<EWResponse> ApiV1ChequeBpmEarlyWarningInfoPostAsync(EarlyWarningInfoRequest? earlyWarningInfoRequest = default(EarlyWarningInfoRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<EWResponse> localVarResponse = await ApiV1ChequeBpmEarlyWarningInfoPostWithHttpInfoAsync(earlyWarningInfoRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Bankamız Erken Uyarı Bilgileri Servisi Bankamız Erken Uyarı Bilgileri Servisi
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="earlyWarningInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (EWResponse)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<EWResponse>> ApiV1ChequeBpmEarlyWarningInfoPostWithHttpInfoAsync(EarlyWarningInfoRequest? earlyWarningInfoRequest = default(EarlyWarningInfoRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = earlyWarningInfoRequest;

            localVarRequestOptions.Operation = "ChequeBpmApi.ApiV1ChequeBpmEarlyWarningInfoPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<EWResponse>("/api/v1/ChequeBpm/EarlyWarningInfo", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ChequeBpmEarlyWarningInfoPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Teminat Depomuzdaki Çekler Teminat Depomuzdaki Çekler
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="existingChequeInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ExistingChequeResponse</returns>
        public ExistingChequeResponse ApiV1ChequeBpmExistingChequeInfoPost(ExistingChequeInfoRequest? existingChequeInfoRequest = default(ExistingChequeInfoRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ExistingChequeResponse> localVarResponse = ApiV1ChequeBpmExistingChequeInfoPostWithHttpInfo(existingChequeInfoRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Teminat Depomuzdaki Çekler Teminat Depomuzdaki Çekler
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="existingChequeInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ExistingChequeResponse</returns>
        public Org.OpenAPITools.Client.ApiResponse<ExistingChequeResponse> ApiV1ChequeBpmExistingChequeInfoPostWithHttpInfo(ExistingChequeInfoRequest? existingChequeInfoRequest = default(ExistingChequeInfoRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = existingChequeInfoRequest;

            localVarRequestOptions.Operation = "ChequeBpmApi.ApiV1ChequeBpmExistingChequeInfoPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Post<ExistingChequeResponse>("/api/v1/ChequeBpm/ExistingChequeInfo", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ChequeBpmExistingChequeInfoPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Teminat Depomuzdaki Çekler Teminat Depomuzdaki Çekler
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="existingChequeInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ExistingChequeResponse</returns>
        public async System.Threading.Tasks.Task<ExistingChequeResponse> ApiV1ChequeBpmExistingChequeInfoPostAsync(ExistingChequeInfoRequest? existingChequeInfoRequest = default(ExistingChequeInfoRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<ExistingChequeResponse> localVarResponse = await ApiV1ChequeBpmExistingChequeInfoPostWithHttpInfoAsync(existingChequeInfoRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Teminat Depomuzdaki Çekler Teminat Depomuzdaki Çekler
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="existingChequeInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ExistingChequeResponse)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ExistingChequeResponse>> ApiV1ChequeBpmExistingChequeInfoPostWithHttpInfoAsync(ExistingChequeInfoRequest? existingChequeInfoRequest = default(ExistingChequeInfoRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = existingChequeInfoRequest;

            localVarRequestOptions.Operation = "ChequeBpmApi.ApiV1ChequeBpmExistingChequeInfoPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<ExistingChequeResponse>("/api/v1/ChequeBpm/ExistingChequeInfo", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ChequeBpmExistingChequeInfoPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Çek Bilgisi Banka Veritabanına yazılması Çek Bilgisi Banka Veritabanına yazılması
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="bpmLogRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>BPMLogResponse</returns>
        public BPMLogResponse ApiV1ChequeBpmGetChequeLogPost(BpmLogRequest? bpmLogRequest = default(BpmLogRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<BPMLogResponse> localVarResponse = ApiV1ChequeBpmGetChequeLogPostWithHttpInfo(bpmLogRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Çek Bilgisi Banka Veritabanına yazılması Çek Bilgisi Banka Veritabanına yazılması
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="bpmLogRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of BPMLogResponse</returns>
        public Org.OpenAPITools.Client.ApiResponse<BPMLogResponse> ApiV1ChequeBpmGetChequeLogPostWithHttpInfo(BpmLogRequest? bpmLogRequest = default(BpmLogRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = bpmLogRequest;

            localVarRequestOptions.Operation = "ChequeBpmApi.ApiV1ChequeBpmGetChequeLogPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Post<BPMLogResponse>("/api/v1/ChequeBpm/GetChequeLog", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ChequeBpmGetChequeLogPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Çek Bilgisi Banka Veritabanına yazılması Çek Bilgisi Banka Veritabanına yazılması
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="bpmLogRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of BPMLogResponse</returns>
        public async System.Threading.Tasks.Task<BPMLogResponse> ApiV1ChequeBpmGetChequeLogPostAsync(BpmLogRequest? bpmLogRequest = default(BpmLogRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<BPMLogResponse> localVarResponse = await ApiV1ChequeBpmGetChequeLogPostWithHttpInfoAsync(bpmLogRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Çek Bilgisi Banka Veritabanına yazılması Çek Bilgisi Banka Veritabanına yazılması
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="bpmLogRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (BPMLogResponse)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<BPMLogResponse>> ApiV1ChequeBpmGetChequeLogPostWithHttpInfoAsync(BpmLogRequest? bpmLogRequest = default(BpmLogRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = bpmLogRequest;

            localVarRequestOptions.Operation = "ChequeBpmApi.ApiV1ChequeBpmGetChequeLogPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<BPMLogResponse>("/api/v1/ChequeBpm/GetChequeLog", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ChequeBpmGetChequeLogPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Firma Alıcı Limit Firma Alıcı Limit
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="factoringBuyerLimitRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>BuyerLimitResponse</returns>
        public BuyerLimitResponse ApiV1ChequeBpmGetFactoringBuyerLimitPost(FactoringBuyerLimitRequest? factoringBuyerLimitRequest = default(FactoringBuyerLimitRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<BuyerLimitResponse> localVarResponse = ApiV1ChequeBpmGetFactoringBuyerLimitPostWithHttpInfo(factoringBuyerLimitRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Firma Alıcı Limit Firma Alıcı Limit
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="factoringBuyerLimitRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of BuyerLimitResponse</returns>
        public Org.OpenAPITools.Client.ApiResponse<BuyerLimitResponse> ApiV1ChequeBpmGetFactoringBuyerLimitPostWithHttpInfo(FactoringBuyerLimitRequest? factoringBuyerLimitRequest = default(FactoringBuyerLimitRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = factoringBuyerLimitRequest;

            localVarRequestOptions.Operation = "ChequeBpmApi.ApiV1ChequeBpmGetFactoringBuyerLimitPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Post<BuyerLimitResponse>("/api/v1/ChequeBpm/GetFactoringBuyerLimit", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ChequeBpmGetFactoringBuyerLimitPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Firma Alıcı Limit Firma Alıcı Limit
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="factoringBuyerLimitRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of BuyerLimitResponse</returns>
        public async System.Threading.Tasks.Task<BuyerLimitResponse> ApiV1ChequeBpmGetFactoringBuyerLimitPostAsync(FactoringBuyerLimitRequest? factoringBuyerLimitRequest = default(FactoringBuyerLimitRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<BuyerLimitResponse> localVarResponse = await ApiV1ChequeBpmGetFactoringBuyerLimitPostWithHttpInfoAsync(factoringBuyerLimitRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Firma Alıcı Limit Firma Alıcı Limit
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="factoringBuyerLimitRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (BuyerLimitResponse)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<BuyerLimitResponse>> ApiV1ChequeBpmGetFactoringBuyerLimitPostWithHttpInfoAsync(FactoringBuyerLimitRequest? factoringBuyerLimitRequest = default(FactoringBuyerLimitRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = factoringBuyerLimitRequest;

            localVarRequestOptions.Operation = "ChequeBpmApi.ApiV1ChequeBpmGetFactoringBuyerLimitPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<BuyerLimitResponse>("/api/v1/ChequeBpm/GetFactoringBuyerLimit", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ChequeBpmGetFactoringBuyerLimitPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Klrte Servisi Klrte Servisi
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="klrteServisRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>KlrteServisResponse</returns>
        public KlrteServisResponse ApiV1ChequeBpmGetKlrtePost(KlrteServisRequest? klrteServisRequest = default(KlrteServisRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<KlrteServisResponse> localVarResponse = ApiV1ChequeBpmGetKlrtePostWithHttpInfo(klrteServisRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Klrte Servisi Klrte Servisi
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="klrteServisRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of KlrteServisResponse</returns>
        public Org.OpenAPITools.Client.ApiResponse<KlrteServisResponse> ApiV1ChequeBpmGetKlrtePostWithHttpInfo(KlrteServisRequest? klrteServisRequest = default(KlrteServisRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = klrteServisRequest;

            localVarRequestOptions.Operation = "ChequeBpmApi.ApiV1ChequeBpmGetKlrtePost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Post<KlrteServisResponse>("/api/v1/ChequeBpm/GetKlrte", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ChequeBpmGetKlrtePost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Klrte Servisi Klrte Servisi
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="klrteServisRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of KlrteServisResponse</returns>
        public async System.Threading.Tasks.Task<KlrteServisResponse> ApiV1ChequeBpmGetKlrtePostAsync(KlrteServisRequest? klrteServisRequest = default(KlrteServisRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<KlrteServisResponse> localVarResponse = await ApiV1ChequeBpmGetKlrtePostWithHttpInfoAsync(klrteServisRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Klrte Servisi Klrte Servisi
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="klrteServisRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (KlrteServisResponse)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<KlrteServisResponse>> ApiV1ChequeBpmGetKlrtePostWithHttpInfoAsync(KlrteServisRequest? klrteServisRequest = default(KlrteServisRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = klrteServisRequest;

            localVarRequestOptions.Operation = "ChequeBpmApi.ApiV1ChequeBpmGetKlrtePost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<KlrteServisResponse>("/api/v1/ChequeBpm/GetKlrte", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ChequeBpmGetKlrtePost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Kur Bilgisi Kur Bilgisi
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dovizCinsi"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>double</returns>
        public double ApiV1ChequeBpmGetRateGet(string? dovizCinsi = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<double> localVarResponse = ApiV1ChequeBpmGetRateGetWithHttpInfo(dovizCinsi);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Kur Bilgisi Kur Bilgisi
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dovizCinsi"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of double</returns>
        public Org.OpenAPITools.Client.ApiResponse<double> ApiV1ChequeBpmGetRateGetWithHttpInfo(string? dovizCinsi = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (dovizCinsi != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "DovizCinsi", dovizCinsi));
            }

            localVarRequestOptions.Operation = "ChequeBpmApi.ApiV1ChequeBpmGetRateGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<double>("/api/v1/ChequeBpm/GetRate", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ChequeBpmGetRateGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Kur Bilgisi Kur Bilgisi
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dovizCinsi"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of double</returns>
        public async System.Threading.Tasks.Task<double> ApiV1ChequeBpmGetRateGetAsync(string? dovizCinsi = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<double> localVarResponse = await ApiV1ChequeBpmGetRateGetWithHttpInfoAsync(dovizCinsi, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Kur Bilgisi Kur Bilgisi
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dovizCinsi"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (double)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<double>> ApiV1ChequeBpmGetRateGetWithHttpInfoAsync(string? dovizCinsi = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (dovizCinsi != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "DovizCinsi", dovizCinsi));
            }

            localVarRequestOptions.Operation = "ChequeBpmApi.ApiV1ChequeBpmGetRateGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<double>("/api/v1/ChequeBpm/GetRate", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ChequeBpmGetRateGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// İcra Detay Bilgileri İcra Detay Bilgileri
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="icraInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>IcraResponse</returns>
        public IcraResponse ApiV1ChequeBpmIcraInfoPost(IcraInfoRequest? icraInfoRequest = default(IcraInfoRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<IcraResponse> localVarResponse = ApiV1ChequeBpmIcraInfoPostWithHttpInfo(icraInfoRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// İcra Detay Bilgileri İcra Detay Bilgileri
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="icraInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of IcraResponse</returns>
        public Org.OpenAPITools.Client.ApiResponse<IcraResponse> ApiV1ChequeBpmIcraInfoPostWithHttpInfo(IcraInfoRequest? icraInfoRequest = default(IcraInfoRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = icraInfoRequest;

            localVarRequestOptions.Operation = "ChequeBpmApi.ApiV1ChequeBpmIcraInfoPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Post<IcraResponse>("/api/v1/ChequeBpm/IcraInfo", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ChequeBpmIcraInfoPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// İcra Detay Bilgileri İcra Detay Bilgileri
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="icraInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of IcraResponse</returns>
        public async System.Threading.Tasks.Task<IcraResponse> ApiV1ChequeBpmIcraInfoPostAsync(IcraInfoRequest? icraInfoRequest = default(IcraInfoRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<IcraResponse> localVarResponse = await ApiV1ChequeBpmIcraInfoPostWithHttpInfoAsync(icraInfoRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// İcra Detay Bilgileri İcra Detay Bilgileri
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="icraInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (IcraResponse)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<IcraResponse>> ApiV1ChequeBpmIcraInfoPostWithHttpInfoAsync(IcraInfoRequest? icraInfoRequest = default(IcraInfoRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = icraInfoRequest;

            localVarRequestOptions.Operation = "ChequeBpmApi.ApiV1ChequeBpmIcraInfoPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<IcraResponse>("/api/v1/ChequeBpm/IcraInfo", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ChequeBpmIcraInfoPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// İhale Yasaklılık İhale Yasaklılık
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="ihaleYasaklilikInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>IhaleYAsaklilikResponse</returns>
        public IhaleYAsaklilikResponse ApiV1ChequeBpmIhaleYasaklilikInfoPost(IhaleYasaklilikInfoRequest? ihaleYasaklilikInfoRequest = default(IhaleYasaklilikInfoRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<IhaleYAsaklilikResponse> localVarResponse = ApiV1ChequeBpmIhaleYasaklilikInfoPostWithHttpInfo(ihaleYasaklilikInfoRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// İhale Yasaklılık İhale Yasaklılık
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="ihaleYasaklilikInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of IhaleYAsaklilikResponse</returns>
        public Org.OpenAPITools.Client.ApiResponse<IhaleYAsaklilikResponse> ApiV1ChequeBpmIhaleYasaklilikInfoPostWithHttpInfo(IhaleYasaklilikInfoRequest? ihaleYasaklilikInfoRequest = default(IhaleYasaklilikInfoRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = ihaleYasaklilikInfoRequest;

            localVarRequestOptions.Operation = "ChequeBpmApi.ApiV1ChequeBpmIhaleYasaklilikInfoPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Post<IhaleYAsaklilikResponse>("/api/v1/ChequeBpm/IhaleYasaklilikInfo", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ChequeBpmIhaleYasaklilikInfoPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// İhale Yasaklılık İhale Yasaklılık
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="ihaleYasaklilikInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of IhaleYAsaklilikResponse</returns>
        public async System.Threading.Tasks.Task<IhaleYAsaklilikResponse> ApiV1ChequeBpmIhaleYasaklilikInfoPostAsync(IhaleYasaklilikInfoRequest? ihaleYasaklilikInfoRequest = default(IhaleYasaklilikInfoRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<IhaleYAsaklilikResponse> localVarResponse = await ApiV1ChequeBpmIhaleYasaklilikInfoPostWithHttpInfoAsync(ihaleYasaklilikInfoRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// İhale Yasaklılık İhale Yasaklılık
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="ihaleYasaklilikInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (IhaleYAsaklilikResponse)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<IhaleYAsaklilikResponse>> ApiV1ChequeBpmIhaleYasaklilikInfoPostWithHttpInfoAsync(IhaleYasaklilikInfoRequest? ihaleYasaklilikInfoRequest = default(IhaleYasaklilikInfoRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = ihaleYasaklilikInfoRequest;

            localVarRequestOptions.Operation = "ChequeBpmApi.ApiV1ChequeBpmIhaleYasaklilikInfoPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<IhaleYAsaklilikResponse>("/api/v1/ChequeBpm/IhaleYasaklilikInfo", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ChequeBpmIhaleYasaklilikInfoPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Bireysel KKB Sorgulama Bireysel KKB Sorgulama
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="individualKKBSummaryRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>KKBSummaryResponse</returns>
        public KKBSummaryResponse ApiV1ChequeBpmIndividualKKBSummaryPost(IndividualKKBSummaryRequest? individualKKBSummaryRequest = default(IndividualKKBSummaryRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<KKBSummaryResponse> localVarResponse = ApiV1ChequeBpmIndividualKKBSummaryPostWithHttpInfo(individualKKBSummaryRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Bireysel KKB Sorgulama Bireysel KKB Sorgulama
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="individualKKBSummaryRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of KKBSummaryResponse</returns>
        public Org.OpenAPITools.Client.ApiResponse<KKBSummaryResponse> ApiV1ChequeBpmIndividualKKBSummaryPostWithHttpInfo(IndividualKKBSummaryRequest? individualKKBSummaryRequest = default(IndividualKKBSummaryRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = individualKKBSummaryRequest;

            localVarRequestOptions.Operation = "ChequeBpmApi.ApiV1ChequeBpmIndividualKKBSummaryPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Post<KKBSummaryResponse>("/api/v1/ChequeBpm/IndividualKKBSummary", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ChequeBpmIndividualKKBSummaryPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Bireysel KKB Sorgulama Bireysel KKB Sorgulama
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="individualKKBSummaryRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of KKBSummaryResponse</returns>
        public async System.Threading.Tasks.Task<KKBSummaryResponse> ApiV1ChequeBpmIndividualKKBSummaryPostAsync(IndividualKKBSummaryRequest? individualKKBSummaryRequest = default(IndividualKKBSummaryRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<KKBSummaryResponse> localVarResponse = await ApiV1ChequeBpmIndividualKKBSummaryPostWithHttpInfoAsync(individualKKBSummaryRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Bireysel KKB Sorgulama Bireysel KKB Sorgulama
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="individualKKBSummaryRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (KKBSummaryResponse)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<KKBSummaryResponse>> ApiV1ChequeBpmIndividualKKBSummaryPostWithHttpInfoAsync(IndividualKKBSummaryRequest? individualKKBSummaryRequest = default(IndividualKKBSummaryRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = individualKKBSummaryRequest;

            localVarRequestOptions.Operation = "ChequeBpmApi.ApiV1ChequeBpmIndividualKKBSummaryPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<KKBSummaryResponse>("/api/v1/ChequeBpm/IndividualKKBSummary", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ChequeBpmIndividualKKBSummaryPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// KKB Çek Raporu KKB Çek Raporu
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="kKBChequeInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>KKBChequeResponse</returns>
        public KKBChequeResponse ApiV1ChequeBpmKKBChequeInfoPost(KKBChequeInfoRequest? kKBChequeInfoRequest = default(KKBChequeInfoRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<KKBChequeResponse> localVarResponse = ApiV1ChequeBpmKKBChequeInfoPostWithHttpInfo(kKBChequeInfoRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// KKB Çek Raporu KKB Çek Raporu
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="kKBChequeInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of KKBChequeResponse</returns>
        public Org.OpenAPITools.Client.ApiResponse<KKBChequeResponse> ApiV1ChequeBpmKKBChequeInfoPostWithHttpInfo(KKBChequeInfoRequest? kKBChequeInfoRequest = default(KKBChequeInfoRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = kKBChequeInfoRequest;

            localVarRequestOptions.Operation = "ChequeBpmApi.ApiV1ChequeBpmKKBChequeInfoPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Post<KKBChequeResponse>("/api/v1/ChequeBpm/KKBChequeInfo", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ChequeBpmKKBChequeInfoPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// KKB Çek Raporu KKB Çek Raporu
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="kKBChequeInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of KKBChequeResponse</returns>
        public async System.Threading.Tasks.Task<KKBChequeResponse> ApiV1ChequeBpmKKBChequeInfoPostAsync(KKBChequeInfoRequest? kKBChequeInfoRequest = default(KKBChequeInfoRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<KKBChequeResponse> localVarResponse = await ApiV1ChequeBpmKKBChequeInfoPostWithHttpInfoAsync(kKBChequeInfoRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// KKB Çek Raporu KKB Çek Raporu
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="kKBChequeInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (KKBChequeResponse)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<KKBChequeResponse>> ApiV1ChequeBpmKKBChequeInfoPostWithHttpInfoAsync(KKBChequeInfoRequest? kKBChequeInfoRequest = default(KKBChequeInfoRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = kKBChequeInfoRequest;

            localVarRequestOptions.Operation = "ChequeBpmApi.ApiV1ChequeBpmKKBChequeInfoPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<KKBChequeResponse>("/api/v1/ChequeBpm/KKBChequeInfo", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ChequeBpmKKBChequeInfoPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// KKB Çek Durum Sorgulama KKB Çek Durum Sorgulama
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="kKBChequeStatusRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ChequeStatusResponse</returns>
        public ChequeStatusResponse ApiV1ChequeBpmKKBChequeStatusPost(KKBChequeStatusRequest? kKBChequeStatusRequest = default(KKBChequeStatusRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ChequeStatusResponse> localVarResponse = ApiV1ChequeBpmKKBChequeStatusPostWithHttpInfo(kKBChequeStatusRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// KKB Çek Durum Sorgulama KKB Çek Durum Sorgulama
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="kKBChequeStatusRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ChequeStatusResponse</returns>
        public Org.OpenAPITools.Client.ApiResponse<ChequeStatusResponse> ApiV1ChequeBpmKKBChequeStatusPostWithHttpInfo(KKBChequeStatusRequest? kKBChequeStatusRequest = default(KKBChequeStatusRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = kKBChequeStatusRequest;

            localVarRequestOptions.Operation = "ChequeBpmApi.ApiV1ChequeBpmKKBChequeStatusPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Post<ChequeStatusResponse>("/api/v1/ChequeBpm/KKBChequeStatus", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ChequeBpmKKBChequeStatusPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// KKB Çek Durum Sorgulama KKB Çek Durum Sorgulama
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="kKBChequeStatusRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ChequeStatusResponse</returns>
        public async System.Threading.Tasks.Task<ChequeStatusResponse> ApiV1ChequeBpmKKBChequeStatusPostAsync(KKBChequeStatusRequest? kKBChequeStatusRequest = default(KKBChequeStatusRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<ChequeStatusResponse> localVarResponse = await ApiV1ChequeBpmKKBChequeStatusPostWithHttpInfoAsync(kKBChequeStatusRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// KKB Çek Durum Sorgulama KKB Çek Durum Sorgulama
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="kKBChequeStatusRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ChequeStatusResponse)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ChequeStatusResponse>> ApiV1ChequeBpmKKBChequeStatusPostWithHttpInfoAsync(KKBChequeStatusRequest? kKBChequeStatusRequest = default(KKBChequeStatusRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = kKBChequeStatusRequest;

            localVarRequestOptions.Operation = "ChequeBpmApi.ApiV1ChequeBpmKKBChequeStatusPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<ChequeStatusResponse>("/api/v1/ChequeBpm/KKBChequeStatus", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ChequeBpmKKBChequeStatusPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// KKB Çapraz Çek Sorgulama KKB Çapraz Çek Sorgulama
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="kKBCrossChequeInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>CaprazCekIliskileriSorguResponse</returns>
        public CaprazCekIliskileriSorguResponse ApiV1ChequeBpmKKBCrossChequeInfoPost(KKBCrossChequeInfoRequest? kKBCrossChequeInfoRequest = default(KKBCrossChequeInfoRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<CaprazCekIliskileriSorguResponse> localVarResponse = ApiV1ChequeBpmKKBCrossChequeInfoPostWithHttpInfo(kKBCrossChequeInfoRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// KKB Çapraz Çek Sorgulama KKB Çapraz Çek Sorgulama
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="kKBCrossChequeInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of CaprazCekIliskileriSorguResponse</returns>
        public Org.OpenAPITools.Client.ApiResponse<CaprazCekIliskileriSorguResponse> ApiV1ChequeBpmKKBCrossChequeInfoPostWithHttpInfo(KKBCrossChequeInfoRequest? kKBCrossChequeInfoRequest = default(KKBCrossChequeInfoRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = kKBCrossChequeInfoRequest;

            localVarRequestOptions.Operation = "ChequeBpmApi.ApiV1ChequeBpmKKBCrossChequeInfoPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Post<CaprazCekIliskileriSorguResponse>("/api/v1/ChequeBpm/KKBCrossChequeInfo", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ChequeBpmKKBCrossChequeInfoPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// KKB Çapraz Çek Sorgulama KKB Çapraz Çek Sorgulama
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="kKBCrossChequeInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of CaprazCekIliskileriSorguResponse</returns>
        public async System.Threading.Tasks.Task<CaprazCekIliskileriSorguResponse> ApiV1ChequeBpmKKBCrossChequeInfoPostAsync(KKBCrossChequeInfoRequest? kKBCrossChequeInfoRequest = default(KKBCrossChequeInfoRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<CaprazCekIliskileriSorguResponse> localVarResponse = await ApiV1ChequeBpmKKBCrossChequeInfoPostWithHttpInfoAsync(kKBCrossChequeInfoRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// KKB Çapraz Çek Sorgulama KKB Çapraz Çek Sorgulama
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="kKBCrossChequeInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (CaprazCekIliskileriSorguResponse)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<CaprazCekIliskileriSorguResponse>> ApiV1ChequeBpmKKBCrossChequeInfoPostWithHttpInfoAsync(KKBCrossChequeInfoRequest? kKBCrossChequeInfoRequest = default(KKBCrossChequeInfoRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = kKBCrossChequeInfoRequest;

            localVarRequestOptions.Operation = "ChequeBpmApi.ApiV1ChequeBpmKKBCrossChequeInfoPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<CaprazCekIliskileriSorguResponse>("/api/v1/ChequeBpm/KKBCrossChequeInfo", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ChequeBpmKKBCrossChequeInfoPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// KKB GIB Sorgulama KKB GIB Sorgulama
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="kKBGIBKunyeInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>KKBGIBKunyeResponse</returns>
        public KKBGIBKunyeResponse ApiV1ChequeBpmKKBGIBKunyeInfoPost(KKBGIBKunyeInfoRequest? kKBGIBKunyeInfoRequest = default(KKBGIBKunyeInfoRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<KKBGIBKunyeResponse> localVarResponse = ApiV1ChequeBpmKKBGIBKunyeInfoPostWithHttpInfo(kKBGIBKunyeInfoRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// KKB GIB Sorgulama KKB GIB Sorgulama
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="kKBGIBKunyeInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of KKBGIBKunyeResponse</returns>
        public Org.OpenAPITools.Client.ApiResponse<KKBGIBKunyeResponse> ApiV1ChequeBpmKKBGIBKunyeInfoPostWithHttpInfo(KKBGIBKunyeInfoRequest? kKBGIBKunyeInfoRequest = default(KKBGIBKunyeInfoRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = kKBGIBKunyeInfoRequest;

            localVarRequestOptions.Operation = "ChequeBpmApi.ApiV1ChequeBpmKKBGIBKunyeInfoPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Post<KKBGIBKunyeResponse>("/api/v1/ChequeBpm/KKBGIBKunyeInfo", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ChequeBpmKKBGIBKunyeInfoPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// KKB GIB Sorgulama KKB GIB Sorgulama
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="kKBGIBKunyeInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of KKBGIBKunyeResponse</returns>
        public async System.Threading.Tasks.Task<KKBGIBKunyeResponse> ApiV1ChequeBpmKKBGIBKunyeInfoPostAsync(KKBGIBKunyeInfoRequest? kKBGIBKunyeInfoRequest = default(KKBGIBKunyeInfoRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<KKBGIBKunyeResponse> localVarResponse = await ApiV1ChequeBpmKKBGIBKunyeInfoPostWithHttpInfoAsync(kKBGIBKunyeInfoRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// KKB GIB Sorgulama KKB GIB Sorgulama
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="kKBGIBKunyeInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (KKBGIBKunyeResponse)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<KKBGIBKunyeResponse>> ApiV1ChequeBpmKKBGIBKunyeInfoPostWithHttpInfoAsync(KKBGIBKunyeInfoRequest? kKBGIBKunyeInfoRequest = default(KKBGIBKunyeInfoRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = kKBGIBKunyeInfoRequest;

            localVarRequestOptions.Operation = "ChequeBpmApi.ApiV1ChequeBpmKKBGIBKunyeInfoPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<KKBGIBKunyeResponse>("/api/v1/ChequeBpm/KKBGIBKunyeInfo", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ChequeBpmKKBGIBKunyeInfoPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// KKB Risk Raporu KKB Risk Raporu
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="kKBRiskRaporuRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>KKBRiskRaporuResponse</returns>
        public KKBRiskRaporuResponse ApiV1ChequeBpmKKBRiskRaporuPost(KKBRiskRaporuRequest? kKBRiskRaporuRequest = default(KKBRiskRaporuRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<KKBRiskRaporuResponse> localVarResponse = ApiV1ChequeBpmKKBRiskRaporuPostWithHttpInfo(kKBRiskRaporuRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// KKB Risk Raporu KKB Risk Raporu
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="kKBRiskRaporuRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of KKBRiskRaporuResponse</returns>
        public Org.OpenAPITools.Client.ApiResponse<KKBRiskRaporuResponse> ApiV1ChequeBpmKKBRiskRaporuPostWithHttpInfo(KKBRiskRaporuRequest? kKBRiskRaporuRequest = default(KKBRiskRaporuRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = kKBRiskRaporuRequest;

            localVarRequestOptions.Operation = "ChequeBpmApi.ApiV1ChequeBpmKKBRiskRaporuPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Post<KKBRiskRaporuResponse>("/api/v1/ChequeBpm/KKBRiskRaporu", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ChequeBpmKKBRiskRaporuPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// KKB Risk Raporu KKB Risk Raporu
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="kKBRiskRaporuRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of KKBRiskRaporuResponse</returns>
        public async System.Threading.Tasks.Task<KKBRiskRaporuResponse> ApiV1ChequeBpmKKBRiskRaporuPostAsync(KKBRiskRaporuRequest? kKBRiskRaporuRequest = default(KKBRiskRaporuRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<KKBRiskRaporuResponse> localVarResponse = await ApiV1ChequeBpmKKBRiskRaporuPostWithHttpInfoAsync(kKBRiskRaporuRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// KKB Risk Raporu KKB Risk Raporu
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="kKBRiskRaporuRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (KKBRiskRaporuResponse)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<KKBRiskRaporuResponse>> ApiV1ChequeBpmKKBRiskRaporuPostWithHttpInfoAsync(KKBRiskRaporuRequest? kKBRiskRaporuRequest = default(KKBRiskRaporuRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = kKBRiskRaporuRequest;

            localVarRequestOptions.Operation = "ChequeBpmApi.ApiV1ChequeBpmKKBRiskRaporuPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<KKBRiskRaporuResponse>("/api/v1/ChequeBpm/KKBRiskRaporu", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ChequeBpmKKBRiskRaporuPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// KKB Protestolu Senet KKB Protestolu Senet
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="kKBSenetInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>SenetDetayListesiResponse</returns>
        public SenetDetayListesiResponse ApiV1ChequeBpmKKBSenetInfoPost(KKBSenetInfoRequest? kKBSenetInfoRequest = default(KKBSenetInfoRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<SenetDetayListesiResponse> localVarResponse = ApiV1ChequeBpmKKBSenetInfoPostWithHttpInfo(kKBSenetInfoRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// KKB Protestolu Senet KKB Protestolu Senet
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="kKBSenetInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of SenetDetayListesiResponse</returns>
        public Org.OpenAPITools.Client.ApiResponse<SenetDetayListesiResponse> ApiV1ChequeBpmKKBSenetInfoPostWithHttpInfo(KKBSenetInfoRequest? kKBSenetInfoRequest = default(KKBSenetInfoRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = kKBSenetInfoRequest;

            localVarRequestOptions.Operation = "ChequeBpmApi.ApiV1ChequeBpmKKBSenetInfoPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Post<SenetDetayListesiResponse>("/api/v1/ChequeBpm/KKBSenetInfo", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ChequeBpmKKBSenetInfoPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// KKB Protestolu Senet KKB Protestolu Senet
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="kKBSenetInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of SenetDetayListesiResponse</returns>
        public async System.Threading.Tasks.Task<SenetDetayListesiResponse> ApiV1ChequeBpmKKBSenetInfoPostAsync(KKBSenetInfoRequest? kKBSenetInfoRequest = default(KKBSenetInfoRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<SenetDetayListesiResponse> localVarResponse = await ApiV1ChequeBpmKKBSenetInfoPostWithHttpInfoAsync(kKBSenetInfoRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// KKB Protestolu Senet KKB Protestolu Senet
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="kKBSenetInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (SenetDetayListesiResponse)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<SenetDetayListesiResponse>> ApiV1ChequeBpmKKBSenetInfoPostWithHttpInfoAsync(KKBSenetInfoRequest? kKBSenetInfoRequest = default(KKBSenetInfoRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = kKBSenetInfoRequest;

            localVarRequestOptions.Operation = "ChequeBpmApi.ApiV1ChequeBpmKKBSenetInfoPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<SenetDetayListesiResponse>("/api/v1/ChequeBpm/KKBSenetInfo", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ChequeBpmKKBSenetInfoPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Firma Bazında Memzuç Detay Bilgileri Firma Bazında Memzuç Detay Bilgileri
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="memzucInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>MemzucEntResponse</returns>
        public MemzucEntResponse ApiV1ChequeBpmMemzucInfoPost(MemzucInfoRequest? memzucInfoRequest = default(MemzucInfoRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<MemzucEntResponse> localVarResponse = ApiV1ChequeBpmMemzucInfoPostWithHttpInfo(memzucInfoRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Firma Bazında Memzuç Detay Bilgileri Firma Bazında Memzuç Detay Bilgileri
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="memzucInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of MemzucEntResponse</returns>
        public Org.OpenAPITools.Client.ApiResponse<MemzucEntResponse> ApiV1ChequeBpmMemzucInfoPostWithHttpInfo(MemzucInfoRequest? memzucInfoRequest = default(MemzucInfoRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = memzucInfoRequest;

            localVarRequestOptions.Operation = "ChequeBpmApi.ApiV1ChequeBpmMemzucInfoPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Post<MemzucEntResponse>("/api/v1/ChequeBpm/MemzucInfo", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ChequeBpmMemzucInfoPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Firma Bazında Memzuç Detay Bilgileri Firma Bazında Memzuç Detay Bilgileri
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="memzucInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of MemzucEntResponse</returns>
        public async System.Threading.Tasks.Task<MemzucEntResponse> ApiV1ChequeBpmMemzucInfoPostAsync(MemzucInfoRequest? memzucInfoRequest = default(MemzucInfoRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<MemzucEntResponse> localVarResponse = await ApiV1ChequeBpmMemzucInfoPostWithHttpInfoAsync(memzucInfoRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Firma Bazında Memzuç Detay Bilgileri Firma Bazında Memzuç Detay Bilgileri
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="memzucInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (MemzucEntResponse)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<MemzucEntResponse>> ApiV1ChequeBpmMemzucInfoPostWithHttpInfoAsync(MemzucInfoRequest? memzucInfoRequest = default(MemzucInfoRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = memzucInfoRequest;

            localVarRequestOptions.Operation = "ChequeBpmApi.ApiV1ChequeBpmMemzucInfoPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<MemzucEntResponse>("/api/v1/ChequeBpm/MemzucInfo", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ChequeBpmMemzucInfoPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Negatif Listede yeralan Olumsuzluklar Negatif Listede yeralan Olumsuzluklar
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="negativenessInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>NegativnessResponse</returns>
        public NegativnessResponse ApiV1ChequeBpmNegativenessInfoPost(NegativenessInfoRequest? negativenessInfoRequest = default(NegativenessInfoRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<NegativnessResponse> localVarResponse = ApiV1ChequeBpmNegativenessInfoPostWithHttpInfo(negativenessInfoRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Negatif Listede yeralan Olumsuzluklar Negatif Listede yeralan Olumsuzluklar
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="negativenessInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of NegativnessResponse</returns>
        public Org.OpenAPITools.Client.ApiResponse<NegativnessResponse> ApiV1ChequeBpmNegativenessInfoPostWithHttpInfo(NegativenessInfoRequest? negativenessInfoRequest = default(NegativenessInfoRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = negativenessInfoRequest;

            localVarRequestOptions.Operation = "ChequeBpmApi.ApiV1ChequeBpmNegativenessInfoPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Post<NegativnessResponse>("/api/v1/ChequeBpm/NegativenessInfo", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ChequeBpmNegativenessInfoPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Negatif Listede yeralan Olumsuzluklar Negatif Listede yeralan Olumsuzluklar
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="negativenessInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of NegativnessResponse</returns>
        public async System.Threading.Tasks.Task<NegativnessResponse> ApiV1ChequeBpmNegativenessInfoPostAsync(NegativenessInfoRequest? negativenessInfoRequest = default(NegativenessInfoRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<NegativnessResponse> localVarResponse = await ApiV1ChequeBpmNegativenessInfoPostWithHttpInfoAsync(negativenessInfoRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Negatif Listede yeralan Olumsuzluklar Negatif Listede yeralan Olumsuzluklar
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="negativenessInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (NegativnessResponse)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<NegativnessResponse>> ApiV1ChequeBpmNegativenessInfoPostWithHttpInfoAsync(NegativenessInfoRequest? negativenessInfoRequest = default(NegativenessInfoRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = negativenessInfoRequest;

            localVarRequestOptions.Operation = "ChequeBpmApi.ApiV1ChequeBpmNegativenessInfoPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<NegativnessResponse>("/api/v1/ChequeBpm/NegativenessInfo", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ChequeBpmNegativenessInfoPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Protestolu Senet Bilgileri Protestolu Senet Bilgileri
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="protestedBillInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ProtestoluSenetBilgisiResponse</returns>
        public ProtestoluSenetBilgisiResponse ApiV1ChequeBpmProtestedBillInfoPost(ProtestedBillInfoRequest? protestedBillInfoRequest = default(ProtestedBillInfoRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ProtestoluSenetBilgisiResponse> localVarResponse = ApiV1ChequeBpmProtestedBillInfoPostWithHttpInfo(protestedBillInfoRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Protestolu Senet Bilgileri Protestolu Senet Bilgileri
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="protestedBillInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ProtestoluSenetBilgisiResponse</returns>
        public Org.OpenAPITools.Client.ApiResponse<ProtestoluSenetBilgisiResponse> ApiV1ChequeBpmProtestedBillInfoPostWithHttpInfo(ProtestedBillInfoRequest? protestedBillInfoRequest = default(ProtestedBillInfoRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = protestedBillInfoRequest;

            localVarRequestOptions.Operation = "ChequeBpmApi.ApiV1ChequeBpmProtestedBillInfoPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Post<ProtestoluSenetBilgisiResponse>("/api/v1/ChequeBpm/ProtestedBillInfo", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ChequeBpmProtestedBillInfoPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Protestolu Senet Bilgileri Protestolu Senet Bilgileri
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="protestedBillInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ProtestoluSenetBilgisiResponse</returns>
        public async System.Threading.Tasks.Task<ProtestoluSenetBilgisiResponse> ApiV1ChequeBpmProtestedBillInfoPostAsync(ProtestedBillInfoRequest? protestedBillInfoRequest = default(ProtestedBillInfoRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<ProtestoluSenetBilgisiResponse> localVarResponse = await ApiV1ChequeBpmProtestedBillInfoPostWithHttpInfoAsync(protestedBillInfoRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Protestolu Senet Bilgileri Protestolu Senet Bilgileri
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="protestedBillInfoRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ProtestoluSenetBilgisiResponse)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ProtestoluSenetBilgisiResponse>> ApiV1ChequeBpmProtestedBillInfoPostWithHttpInfoAsync(ProtestedBillInfoRequest? protestedBillInfoRequest = default(ProtestedBillInfoRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = protestedBillInfoRequest;

            localVarRequestOptions.Operation = "ChequeBpmApi.ApiV1ChequeBpmProtestedBillInfoPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<ProtestoluSenetBilgisiResponse>("/api/v1/ChequeBpm/ProtestedBillInfo", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ChequeBpmProtestedBillInfoPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Pusula Tüzel Kontak Müşteri Pusula Tüzel Kontak Müşteri
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="saveCustomerRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>SaveKontakResponse</returns>
        public SaveKontakResponse ApiV1ChequeBpmSaveCustomerPost(SaveCustomerRequest? saveCustomerRequest = default(SaveCustomerRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<SaveKontakResponse> localVarResponse = ApiV1ChequeBpmSaveCustomerPostWithHttpInfo(saveCustomerRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Pusula Tüzel Kontak Müşteri Pusula Tüzel Kontak Müşteri
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="saveCustomerRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of SaveKontakResponse</returns>
        public Org.OpenAPITools.Client.ApiResponse<SaveKontakResponse> ApiV1ChequeBpmSaveCustomerPostWithHttpInfo(SaveCustomerRequest? saveCustomerRequest = default(SaveCustomerRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = saveCustomerRequest;

            localVarRequestOptions.Operation = "ChequeBpmApi.ApiV1ChequeBpmSaveCustomerPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Post<SaveKontakResponse>("/api/v1/ChequeBpm/SaveCustomer", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ChequeBpmSaveCustomerPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Pusula Tüzel Kontak Müşteri Pusula Tüzel Kontak Müşteri
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="saveCustomerRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of SaveKontakResponse</returns>
        public async System.Threading.Tasks.Task<SaveKontakResponse> ApiV1ChequeBpmSaveCustomerPostAsync(SaveCustomerRequest? saveCustomerRequest = default(SaveCustomerRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<SaveKontakResponse> localVarResponse = await ApiV1ChequeBpmSaveCustomerPostWithHttpInfoAsync(saveCustomerRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Pusula Tüzel Kontak Müşteri Pusula Tüzel Kontak Müşteri
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="saveCustomerRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (SaveKontakResponse)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<SaveKontakResponse>> ApiV1ChequeBpmSaveCustomerPostWithHttpInfoAsync(SaveCustomerRequest? saveCustomerRequest = default(SaveCustomerRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = saveCustomerRequest;

            localVarRequestOptions.Operation = "ChequeBpmApi.ApiV1ChequeBpmSaveCustomerPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<SaveKontakResponse>("/api/v1/ChequeBpm/SaveCustomer", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ChequeBpmSaveCustomerPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// İstihbarat Özet Bilgi İstihbarat Özet Bilgi(Adet1 vs year(now)-6 dır. Yani 2022Adet değeri Adet1 de 2021Adet değeri Adet 2 şeklindedir.)
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tcmbRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>TCMBResponse</returns>
        public TCMBResponse ApiV1ChequeBpmTCMBInfoPost(TcmbRequest? tcmbRequest = default(TcmbRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<TCMBResponse> localVarResponse = ApiV1ChequeBpmTCMBInfoPostWithHttpInfo(tcmbRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// İstihbarat Özet Bilgi İstihbarat Özet Bilgi(Adet1 vs year(now)-6 dır. Yani 2022Adet değeri Adet1 de 2021Adet değeri Adet 2 şeklindedir.)
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tcmbRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of TCMBResponse</returns>
        public Org.OpenAPITools.Client.ApiResponse<TCMBResponse> ApiV1ChequeBpmTCMBInfoPostWithHttpInfo(TcmbRequest? tcmbRequest = default(TcmbRequest?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = tcmbRequest;

            localVarRequestOptions.Operation = "ChequeBpmApi.ApiV1ChequeBpmTCMBInfoPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Post<TCMBResponse>("/api/v1/ChequeBpm/TCMBInfo", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ChequeBpmTCMBInfoPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// İstihbarat Özet Bilgi İstihbarat Özet Bilgi(Adet1 vs year(now)-6 dır. Yani 2022Adet değeri Adet1 de 2021Adet değeri Adet 2 şeklindedir.)
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tcmbRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of TCMBResponse</returns>
        public async System.Threading.Tasks.Task<TCMBResponse> ApiV1ChequeBpmTCMBInfoPostAsync(TcmbRequest? tcmbRequest = default(TcmbRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<TCMBResponse> localVarResponse = await ApiV1ChequeBpmTCMBInfoPostWithHttpInfoAsync(tcmbRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// İstihbarat Özet Bilgi İstihbarat Özet Bilgi(Adet1 vs year(now)-6 dır. Yani 2022Adet değeri Adet1 de 2021Adet değeri Adet 2 şeklindedir.)
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tcmbRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (TCMBResponse)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<TCMBResponse>> ApiV1ChequeBpmTCMBInfoPostWithHttpInfoAsync(TcmbRequest? tcmbRequest = default(TcmbRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = tcmbRequest;

            localVarRequestOptions.Operation = "ChequeBpmApi.ApiV1ChequeBpmTCMBInfoPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<TCMBResponse>("/api/v1/ChequeBpm/TCMBInfo", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ChequeBpmTCMBInfoPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

    }
}
